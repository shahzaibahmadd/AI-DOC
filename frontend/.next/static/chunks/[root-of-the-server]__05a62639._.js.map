{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\r\n\r\ntype SendMessage = (msg: any) => void\r\nexport type WebSocketMessage =\r\n  | {\r\n      type: 'turbopack-connected'\r\n    }\r\n  | {\r\n      type: 'turbopack-message'\r\n      data: Record<string, any>\r\n    }\r\n\r\nexport type ClientOptions = {\r\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void\r\n  sendMessage: SendMessage\r\n  onUpdateError: (err: unknown) => void\r\n}\r\n\r\nexport function connect({\r\n  addMessageListener,\r\n  sendMessage,\r\n  onUpdateError = console.error,\r\n}: ClientOptions) {\r\n  addMessageListener((msg) => {\r\n    switch (msg.type) {\r\n      case 'turbopack-connected':\r\n        handleSocketConnected(sendMessage)\r\n        break\r\n      default:\r\n        try {\r\n          if (Array.isArray(msg.data)) {\r\n            for (let i = 0; i < msg.data.length; i++) {\r\n              handleSocketMessage(msg.data[i] as ServerMessage)\r\n            }\r\n          } else {\r\n            handleSocketMessage(msg.data as ServerMessage)\r\n          }\r\n          applyAggregatedUpdates()\r\n        } catch (e: unknown) {\r\n          console.warn(\r\n            '[Fast Refresh] performing full reload\\n\\n' +\r\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\r\n              'You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n' +\r\n              'Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n' +\r\n              'It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n' +\r\n              'Fast Refresh requires at least one parent function component in your React tree.'\r\n          )\r\n          onUpdateError(e)\r\n          location.reload()\r\n        }\r\n        break\r\n    }\r\n  })\r\n\r\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS\r\n  if (queued != null && !Array.isArray(queued)) {\r\n    throw new Error('A separate HMR handler was already registered')\r\n  }\r\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\r\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    },\r\n  }\r\n\r\n  if (Array.isArray(queued)) {\r\n    for (const [chunkPath, callback] of queued) {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    }\r\n  }\r\n}\r\n\r\ntype UpdateCallbackSet = {\r\n  callbacks: Set<UpdateCallback>\r\n  unsubscribe: () => void\r\n}\r\n\r\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map()\r\n\r\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\r\n  sendMessage(JSON.stringify(message))\r\n}\r\n\r\ntype ResourceKey = string\r\n\r\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\r\n  return JSON.stringify({\r\n    path: resource.path,\r\n    headers: resource.headers || null,\r\n  })\r\n}\r\n\r\nfunction subscribeToUpdates(\r\n  sendMessage: SendMessage,\r\n  resource: ResourceIdentifier\r\n): () => void {\r\n  sendJSON(sendMessage, {\r\n    type: 'turbopack-subscribe',\r\n    ...resource,\r\n  })\r\n\r\n  return () => {\r\n    sendJSON(sendMessage, {\r\n      type: 'turbopack-unsubscribe',\r\n      ...resource,\r\n    })\r\n  }\r\n}\r\n\r\nfunction handleSocketConnected(sendMessage: SendMessage) {\r\n  for (const key of updateCallbackSets.keys()) {\r\n    subscribeToUpdates(sendMessage, JSON.parse(key))\r\n  }\r\n}\r\n\r\n// we aggregate all pending updates until the issues are resolved\r\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\r\n  new Map()\r\n\r\nfunction aggregateUpdates(msg: PartialServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  let aggregated = chunkListsWithPendingUpdates.get(key)\r\n\r\n  if (aggregated) {\r\n    aggregated.instruction = mergeChunkListUpdates(\r\n      aggregated.instruction,\r\n      msg.instruction\r\n    )\r\n  } else {\r\n    chunkListsWithPendingUpdates.set(key, msg)\r\n  }\r\n}\r\n\r\nfunction applyAggregatedUpdates() {\r\n  if (chunkListsWithPendingUpdates.size === 0) return\r\n  hooks.beforeRefresh()\r\n  for (const msg of chunkListsWithPendingUpdates.values()) {\r\n    triggerUpdate(msg)\r\n  }\r\n  chunkListsWithPendingUpdates.clear()\r\n  finalizeUpdate()\r\n}\r\n\r\nfunction mergeChunkListUpdates(\r\n  updateA: ChunkListUpdate,\r\n  updateB: ChunkListUpdate\r\n): ChunkListUpdate {\r\n  let chunks\r\n  if (updateA.chunks != null) {\r\n    if (updateB.chunks == null) {\r\n      chunks = updateA.chunks\r\n    } else {\r\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks)\r\n    }\r\n  } else if (updateB.chunks != null) {\r\n    chunks = updateB.chunks\r\n  }\r\n\r\n  let merged\r\n  if (updateA.merged != null) {\r\n    if (updateB.merged == null) {\r\n      merged = updateA.merged\r\n    } else {\r\n      // Since `merged` is an array of updates, we need to merge them all into\r\n      // one, consistent update.\r\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\r\n      // no need to key on the `type` field.\r\n      let update = updateA.merged[0]\r\n      for (let i = 1; i < updateA.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateA.merged[i]\r\n        )\r\n      }\r\n\r\n      for (let i = 0; i < updateB.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateB.merged[i]\r\n        )\r\n      }\r\n\r\n      merged = [update]\r\n    }\r\n  } else if (updateB.merged != null) {\r\n    merged = updateB.merged\r\n  }\r\n\r\n  return {\r\n    type: 'ChunkListUpdate',\r\n    chunks,\r\n    merged,\r\n  }\r\n}\r\n\r\nfunction mergeChunkListChunks(\r\n  chunksA: Record<ChunkPath, ChunkUpdate>,\r\n  chunksB: Record<ChunkPath, ChunkUpdate>\r\n): Record<ChunkPath, ChunkUpdate> {\r\n  const chunks: Record<ChunkPath, ChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB)\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeChunkUpdates(\r\n  updateA: ChunkUpdate,\r\n  updateB: ChunkUpdate\r\n): ChunkUpdate | undefined {\r\n  if (\r\n    (updateA.type === 'added' && updateB.type === 'deleted') ||\r\n    (updateA.type === 'deleted' && updateB.type === 'added')\r\n  ) {\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'partial') {\r\n    invariant(updateA.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  if (updateB.type === 'partial') {\r\n    invariant(updateB.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nfunction mergeChunkListEcmascriptMergedUpdates(\r\n  mergedA: EcmascriptMergedUpdate,\r\n  mergedB: EcmascriptMergedUpdate\r\n): EcmascriptMergedUpdate {\r\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries)\r\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks)\r\n\r\n  return {\r\n    type: 'EcmascriptMergedUpdate',\r\n    entries,\r\n    chunks,\r\n  }\r\n}\r\n\r\nfunction mergeEcmascriptChunkEntries(\r\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\r\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\r\n): Record<ModuleId, EcmascriptModuleEntry> {\r\n  return { ...entriesA, ...entriesB }\r\n}\r\n\r\nfunction mergeEcmascriptChunksUpdates(\r\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\r\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\r\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\r\n  if (chunksA == null) {\r\n    return chunksB\r\n  }\r\n\r\n  if (chunksB == null) {\r\n    return chunksA\r\n  }\r\n\r\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\r\n        chunkUpdateA,\r\n        chunkUpdateB\r\n      )\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  if (Object.keys(chunks).length === 0) {\r\n    return undefined\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeEcmascriptChunkUpdates(\r\n  updateA: EcmascriptMergedChunkUpdate,\r\n  updateB: EcmascriptMergedChunkUpdate\r\n): EcmascriptMergedChunkUpdate | undefined {\r\n  if (updateA.type === 'added' && updateB.type === 'deleted') {\r\n    // These two completely cancel each other out.\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'deleted' && updateB.type === 'added') {\r\n    const added = []\r\n    const deleted = []\r\n    const deletedModules = new Set(updateA.modules ?? [])\r\n    const addedModules = new Set(updateB.modules ?? [])\r\n\r\n    for (const moduleId of addedModules) {\r\n      if (!deletedModules.has(moduleId)) {\r\n        added.push(moduleId)\r\n      }\r\n    }\r\n\r\n    for (const moduleId of deletedModules) {\r\n      if (!addedModules.has(moduleId)) {\r\n        deleted.push(moduleId)\r\n      }\r\n    }\r\n\r\n    if (added.length === 0 && deleted.length === 0) {\r\n      return undefined\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added,\r\n      deleted,\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'partial') {\r\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])])\r\n    const deleted = new Set([\r\n      ...(updateA.deleted ?? []),\r\n      ...(updateB.deleted ?? []),\r\n    ])\r\n\r\n    if (updateB.added != null) {\r\n      for (const moduleId of updateB.added) {\r\n        deleted.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    if (updateB.deleted != null) {\r\n      for (const moduleId of updateB.deleted) {\r\n        added.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added: [...added],\r\n      deleted: [...deleted],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'added' && updateB.type === 'partial') {\r\n    const modules = new Set([\r\n      ...(updateA.modules ?? []),\r\n      ...(updateB.added ?? []),\r\n    ])\r\n\r\n    for (const moduleId of updateB.deleted ?? []) {\r\n      modules.delete(moduleId)\r\n    }\r\n\r\n    return {\r\n      type: 'added',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'deleted') {\r\n    // We could eagerly return `updateB` here, but this would potentially be\r\n    // incorrect if `updateA` has added modules.\r\n\r\n    const modules = new Set(updateB.modules ?? [])\r\n\r\n    if (updateA.added != null) {\r\n      for (const moduleId of updateA.added) {\r\n        modules.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'deleted',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  // Any other update combination is invalid.\r\n\r\n  return undefined\r\n}\r\n\r\nfunction invariant(_: never, message: string): never {\r\n  throw new Error(`Invariant: ${message}`)\r\n}\r\n\r\nconst CRITICAL = ['bug', 'error', 'fatal']\r\n\r\nfunction compareByList(list: any[], a: any, b: any) {\r\n  const aI = list.indexOf(a) + 1 || list.length\r\n  const bI = list.indexOf(b) + 1 || list.length\r\n  return aI - bI\r\n}\r\n\r\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map()\r\n\r\nfunction emitIssues() {\r\n  const issues = []\r\n  const deduplicationSet = new Set()\r\n\r\n  for (const [_, chunkIssues] of chunksWithIssues) {\r\n    for (const chunkIssue of chunkIssues) {\r\n      if (deduplicationSet.has(chunkIssue.formatted)) continue\r\n\r\n      issues.push(chunkIssue)\r\n      deduplicationSet.add(chunkIssue.formatted)\r\n    }\r\n  }\r\n\r\n  sortIssues(issues)\r\n\r\n  hooks.issues(issues)\r\n}\r\n\r\nfunction handleIssues(msg: ServerMessage): boolean {\r\n  const key = resourceKey(msg.resource)\r\n  let hasCriticalIssues = false\r\n\r\n  for (const issue of msg.issues) {\r\n    if (CRITICAL.includes(issue.severity)) {\r\n      hasCriticalIssues = true\r\n    }\r\n  }\r\n\r\n  if (msg.issues.length > 0) {\r\n    chunksWithIssues.set(key, msg.issues)\r\n  } else if (chunksWithIssues.has(key)) {\r\n    chunksWithIssues.delete(key)\r\n  }\r\n\r\n  emitIssues()\r\n\r\n  return hasCriticalIssues\r\n}\r\n\r\nconst SEVERITY_ORDER = ['bug', 'fatal', 'error', 'warning', 'info', 'log']\r\nconst CATEGORY_ORDER = [\r\n  'parse',\r\n  'resolve',\r\n  'code generation',\r\n  'rendering',\r\n  'typescript',\r\n  'other',\r\n]\r\n\r\nfunction sortIssues(issues: Issue[]) {\r\n  issues.sort((a, b) => {\r\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity)\r\n    if (first !== 0) return first\r\n    return compareByList(CATEGORY_ORDER, a.category, b.category)\r\n  })\r\n}\r\n\r\nconst hooks = {\r\n  beforeRefresh: () => {},\r\n  refresh: () => {},\r\n  buildOk: () => {},\r\n  issues: (_issues: Issue[]) => {},\r\n}\r\n\r\nexport function setHooks(newHooks: typeof hooks) {\r\n  Object.assign(hooks, newHooks)\r\n}\r\n\r\nfunction handleSocketMessage(msg: ServerMessage) {\r\n  sortIssues(msg.issues)\r\n\r\n  handleIssues(msg)\r\n\r\n  switch (msg.type) {\r\n    case 'issues':\r\n      // issues are already handled\r\n      break\r\n    case 'partial':\r\n      // aggregate updates\r\n      aggregateUpdates(msg)\r\n      break\r\n    default:\r\n      // run single update\r\n      const runHooks = chunkListsWithPendingUpdates.size === 0\r\n      if (runHooks) hooks.beforeRefresh()\r\n      triggerUpdate(msg)\r\n      if (runHooks) finalizeUpdate()\r\n      break\r\n  }\r\n}\r\n\r\nfunction finalizeUpdate() {\r\n  hooks.refresh()\r\n  hooks.buildOk()\r\n\r\n  // This is used by the Next.js integration test suite to notify it when HMR\r\n  // updates have been completed.\r\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\r\n  if (globalThis.__NEXT_HMR_CB) {\r\n    globalThis.__NEXT_HMR_CB()\r\n    globalThis.__NEXT_HMR_CB = null\r\n  }\r\n}\r\n\r\nfunction subscribeToChunkUpdate(\r\n  chunkListPath: ChunkListPath,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n): () => void {\r\n  return subscribeToUpdate(\r\n    {\r\n      path: chunkListPath,\r\n    },\r\n    sendMessage,\r\n    callback\r\n  )\r\n}\r\n\r\nexport function subscribeToUpdate(\r\n  resource: ResourceIdentifier,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n) {\r\n  const key = resourceKey(resource)\r\n  let callbackSet: UpdateCallbackSet\r\n  const existingCallbackSet = updateCallbackSets.get(key)\r\n  if (!existingCallbackSet) {\r\n    callbackSet = {\r\n      callbacks: new Set([callback]),\r\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\r\n    }\r\n    updateCallbackSets.set(key, callbackSet)\r\n  } else {\r\n    existingCallbackSet.callbacks.add(callback)\r\n    callbackSet = existingCallbackSet\r\n  }\r\n\r\n  return () => {\r\n    callbackSet.callbacks.delete(callback)\r\n\r\n    if (callbackSet.callbacks.size === 0) {\r\n      callbackSet.unsubscribe()\r\n      updateCallbackSets.delete(key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction triggerUpdate(msg: ServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  const callbackSet = updateCallbackSets.get(key)\r\n  if (!callbackSet) {\r\n    return\r\n  }\r\n\r\n  for (const callback of callbackSet.callbacks) {\r\n    callback(msg)\r\n  }\r\n\r\n  if (msg.type === 'notFound') {\r\n    // This indicates that the resource which we subscribed to either does not exist or\r\n    // has been deleted. In either case, we should clear all update callbacks, so if a\r\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\r\n    // message to the server.\r\n    // No need to send an \"unsubscribe\" message to the server, it will have already\r\n    // dropped the update stream before sending the \"notFound\" message.\r\n    updateCallbackSets.delete(key)\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///D:/FYP/Fyp%20cursor/frontend/context/AuthContext.js"],"sourcesContent":["// context/AuthContext.js\r\nimport { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst AuthContext = createContext({\r\n  token: null,\r\n  isLoggedIn: false, // Start as false initially\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(null);\r\n  // Add a loading state to prevent premature checks\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // On app load, check if token exists in localStorage (single source of truth)\r\n    const storedToken = localStorage.getItem('token');\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (newToken) => {\r\n    setToken(newToken);\r\n    localStorage.setItem('token', newToken);\r\n    router.push('/dashboard');\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    router.push('/');\r\n  };\r\n\r\n  // Derive isLoggedIn directly from the token state\r\n  const isLoggedIn = !!token;\r\n\r\n  // Provide the loading state as well, if needed by components\r\n  const value = { token, isLoggedIn, login, logout, loading };\r\n\r\n  // Don't render children until authentication status is determined\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to easily use the auth context\r\nexport const useAuth = () => useContext(AuthContext);"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;;;AACzB;AACA;;;;;AAEA,MAAM,4BAAc,IAAA,uJAAa,EAAC;IAChC,OAAO;IACP,YAAY;IACZ,OAAO,KAAO;IACd,QAAQ,KAAO;AACjB;AAEO,MAAM,eAAe;QAAC,EAAE,QAAQ,EAAE;;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,kJAAQ,EAAC;IACnC,kDAAkD;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,kJAAQ,EAAC;IACvC,MAAM,SAAS,IAAA,mJAAS;IAExB,IAAA,mJAAS;kCAAC;YACR,8EAA8E;YAC9E,MAAM,cAAc,aAAa,OAAO,CAAC;YACzC,IAAI,aAAa;gBACf,SAAS;YACX;YACA,WAAW;QACb;iCAAG,EAAE;IAEL,MAAM,QAAQ,CAAC;QACb,SAAS;QACT,aAAa,OAAO,CAAC,SAAS;QAC9B,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,SAAS;QACb,SAAS;QACT,aAAa,UAAU,CAAC;QACxB,OAAO,IAAI,CAAC;IACd;IAEA,kDAAkD;IAClD,MAAM,aAAa,CAAC,CAAC;IAErB,6DAA6D;IAC7D,MAAM,QAAQ;QAAE;QAAO;QAAY;QAAO;QAAQ;IAAQ;IAE1D,kEAAkE;IAClE,qBACE,sKAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B,CAAC,WAAW;;;;;;AAGnB;GAvCa;;QAII,mJAAS;;;KAJb;AA0CN,MAAM,UAAU;;IAAM,OAAA,IAAA,oJAAU,EAAC;AAAW;IAAtC","debugId":null}},
    {"offset": {"line": 563, "column": 0}, "map": {"version":3,"sources":["file:///D:/FYP/Fyp%20cursor/frontend/components/Navbar.js"],"sourcesContent":["// export default function Navbar() {\r\n//   return (\r\n//     <nav className=\"navbar\">\r\n//       <div className=\"navbar-left\">\r\n//         <h1 className=\"logo\">AI Document Guide</h1>\r\n//       </div>\r\n//       <div className=\"navbar-right\">\r\n//         <a href=\"/login\" className=\"nav-link\">Login</a>\r\n//         <a href=\"/register\" className=\"nav-link\">Register</a>\r\n//       </div>\r\n\r\n//       <style jsx>{`\r\n//         .navbar {\r\n//           display: flex;\r\n//           justify-content: space-between;\r\n//           align-items: center;\r\n//           padding: 1rem 2rem;\r\n//           background: #171717;\r\n//           color: white;\r\n//         }\r\n//         .logo {\r\n//           font-size: 1.5rem;\r\n//           font-weight: bold;\r\n//         }\r\n//         .navbar-right {\r\n//           display: flex;\r\n//           gap: 1rem;\r\n//         }\r\n//         .nav-link {\r\n//           background: #0070f3;\r\n//           padding: 0.5rem 1rem;\r\n//           border-radius: 5px;\r\n//           color: white;\r\n//           text-decoration: none;\r\n//           transition: background 0.2s;\r\n//         }\r\n//         .nav-link:hover {\r\n//           background: #0059c1;\r\n//         }\r\n//       `}</style>\r\n//     </nav>\r\n//   );\r\n// }\r\n\r\nimport Link from 'next/link';\r\nimport { useState } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nexport default function Navbar() {\r\n  const { isLoggedIn, logout } = useAuth();\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <header className=\"fixed top-0 left-0 right-0 z-20 border-b border-emerald-900/40 bg-gradient-to-b from-gray-900/80 to-gray-900/40 backdrop-blur-xl\">\r\n      <nav className=\"mx-auto max-w-6xl px-4 py-3 flex items-center justify-between\">\r\n        <div className=\"flex items-center justify-between w-full\">\r\n          <Link href=\"/\" className=\"inline-flex items-center gap-3 group\">\r\n            <span className=\"relative inline-flex h-10 w-10 items-center justify-center rounded-xl bg-emerald-500/15 ring-1 ring-emerald-500/30\">\r\n              <span className=\"absolute inset-0 rounded-xl blur-md bg-emerald-500/30 group-hover:bg-emerald-400/40 transition-colors\" />\r\n              <span className=\"text-lg font-bold text-emerald-300\">AI</span>\r\n            </span>\r\n            <span className=\"text-lg sm:text-xl font-semibold tracking-tight text-gray-100\">\r\n              Awaam AI\r\n            </span>\r\n          </Link>\r\n          \r\n          <div className=\"hidden md:flex items-center gap-3\">\r\n            {!isLoggedIn && (\r\n              <>\r\n                <Link href=\"/\" className=\"nav-link\">Home</Link>\r\n                <Link href=\"/info\" className=\"nav-link\">About</Link>\r\n                <Link href=\"/get-started\" className=\"button-primary\">Get Started</Link>\r\n              </>\r\n            )}\r\n            {isLoggedIn && (\r\n              <>\r\n                <Link href=\"/dashboard\" className=\"nav-link\">Dashboard</Link>\r\n                <Link href=\"/chat\" className=\"nav-link\">Chat</Link>\r\n                <button onClick={logout} className=\"button-danger\">Logout</button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <button aria-label=\"Menu\" className=\"md:hidden text-gray-200 hover:text-white transition-colors\" onClick={() => setMenuOpen(v => !v)}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"w-6 h-6\">\r\n            <path fillRule=\"evenodd\" d=\"M3.75 5.25a.75.75 0 01.75-.75h15a.75.75 0 010 1.5h-15a.75.75 0 01-.75-.75zm0 6a.75.75 0 01.75-.75h15a.75.75 0 010 1.5h-15a.75.75 0 01-.75-.75zm0 6a.75.75 0 01.75-.75h15a.75.75 0 010 1.5h-15a.75.75 0 01-.75-.75z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n        </button>\r\n      </nav>\r\n\r\n      {/* Mobile menu */}\r\n      <div className={`md:hidden origin-top transition-all duration-300 ${menuOpen ? 'scale-y-100 opacity-100' : 'scale-y-0 opacity-0'} bg-gray-900/80 backdrop-blur-xl border-t border-gray-800`}> \r\n        <div className=\"px-4 py-3 flex flex-col gap-2\">\r\n          {!isLoggedIn && (\r\n            <>\r\n              <Link href=\"/\" className=\"nav-link w-full\">Home</Link>\r\n              <Link href=\"/info\" className=\"nav-link w-full\">About</Link>\r\n              <Link href=\"/get-started\" className=\"button-primary w-full text-center\">Get Started</Link>\r\n            </>\r\n          )}\r\n          {isLoggedIn && (\r\n            <>\r\n              <Link href=\"/dashboard\" className=\"nav-link w-full\">Dashboard</Link>\r\n              <Link href=\"/chat\" className=\"nav-link w-full\">Chat</Link>\r\n              <button onClick={logout} className=\"button-danger w-full\">Logout</button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .nav-link { \r\n          @apply px-3 py-2 text-sm md:text-[18px] rounded-md text-gray-300 hover:text-white hover:bg-gray-800/60 transition-all duration-200 hover:scale-105; \r\n        }\r\n        .button-primary { \r\n          @apply px-4 py-2 rounded-md text-sm md:text-[18px] font-medium bg-emerald-600 text-white hover:bg-emerald-500 transition-all duration-200 hover:scale-105 hover:shadow-lg hover:shadow-emerald-500/25; \r\n        }\r\n        .button-secondary { \r\n          @apply px-4 py-2 rounded-md text-sm md:text-[18px] font-medium bg-gray-800 text-gray-200 hover:bg-gray-700 transition-all duration-200 hover:scale-105; \r\n        }\r\n        .button-danger { \r\n          @apply px-4 py-2 rounded-md text-sm md:text-[18px] font-medium bg-red-600 text-white hover:bg-red-500 transition-all duration-200 hover:scale-105 hover:shadow-lg hover:shadow-red-500/25; \r\n        }\r\n      `}</style>\r\n    </header>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,qCAAqC;AACrC,aAAa;AACb,+BAA+B;AAC/B,sCAAsC;AACtC,sDAAsD;AACtD,eAAe;AACf,uCAAuC;AACvC,0DAA0D;AAC1D,gEAAgE;AAChE,eAAe;AAEf,sBAAsB;AACtB,oBAAoB;AACpB,2BAA2B;AAC3B,4CAA4C;AAC5C,iCAAiC;AACjC,gCAAgC;AAChC,iCAAiC;AACjC,0BAA0B;AAC1B,YAAY;AACZ,kBAAkB;AAClB,+BAA+B;AAC/B,+BAA+B;AAC/B,YAAY;AACZ,0BAA0B;AAC1B,2BAA2B;AAC3B,uBAAuB;AACvB,YAAY;AACZ,sBAAsB;AACtB,iCAAiC;AACjC,kCAAkC;AAClC,gCAAgC;AAChC,0BAA0B;AAC1B,mCAAmC;AACnC,yCAAyC;AACzC,YAAY;AACZ,4BAA4B;AAC5B,iCAAiC;AACjC,YAAY;AACZ,mBAAmB;AACnB,aAAa;AACb,OAAO;AACP,IAAI;;;;;;;AAEJ;AACA;AACA;;;;;;;AAEe,SAAS;;IACtB,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,IAAA,yIAAO;IACtC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,kJAAQ,EAAC;IAEzC,qBACE,sKAAC;kDAAiB;;0BAChB,sKAAC;0DAAc;;kCACb,sKAAC;kEAAc;;0CACb,sKAAC,+IAAI;gCAAC,MAAK;gCAAI,WAAU;;kDACvB,sKAAC;kFAAe;;0DACd,sKAAC;0FAAe;;;;;;0DAChB,sKAAC;0FAAe;0DAAqC;;;;;;;;;;;;kDAEvD,sKAAC;kFAAe;kDAAgE;;;;;;;;;;;;0CAKlF,sKAAC;0EAAc;;oCACZ,CAAC,4BACA;;0DACE,sKAAC,+IAAI;gDAAC,MAAK;gDAAI,WAAU;0DAAW;;;;;;0DACpC,sKAAC,+IAAI;gDAAC,MAAK;gDAAQ,WAAU;0DAAW;;;;;;0DACxC,sKAAC,+IAAI;gDAAC,MAAK;gDAAe,WAAU;0DAAiB;;;;;;;;oCAGxD,4BACC;;0DACE,sKAAC,+IAAI;gDAAC,MAAK;gDAAa,WAAU;0DAAW;;;;;;0DAC7C,sKAAC,+IAAI;gDAAC,MAAK;gDAAQ,WAAU;0DAAW;;;;;;0DACxC,sKAAC;gDAAO,SAAS;0FAAkB;0DAAgB;;;;;;;;;;;;;;;;;;;;kCAM3D,sKAAC;wBAAO,cAAW;wBAA8E,SAAS,IAAM,YAAY,CAAA,IAAK,CAAC;kEAA9F;kCAClC,cAAA,sKAAC;4BAAI,OAAM;4BAA6B,SAAQ;4BAAY,MAAK;sEAAyB;sCACxF,cAAA,sKAAC;gCAAK,UAAS;gCAAU,GAAE;gCAAqN,UAAS;;;;;;;;;;;;;;;;;;;;;;;0BAM/P,sKAAC;0DAAe,AAAC,oDAAgH,OAA7D,WAAW,4BAA4B,uBAAsB;0BAC/H,cAAA,sKAAC;8DAAc;;wBACZ,CAAC,4BACA;;8CACE,sKAAC,+IAAI;oCAAC,MAAK;oCAAI,WAAU;8CAAkB;;;;;;8CAC3C,sKAAC,+IAAI;oCAAC,MAAK;oCAAQ,WAAU;8CAAkB;;;;;;8CAC/C,sKAAC,+IAAI;oCAAC,MAAK;oCAAe,WAAU;8CAAoC;;;;;;;;wBAG3E,4BACC;;8CACE,sKAAC,+IAAI;oCAAC,MAAK;oCAAa,WAAU;8CAAkB;;;;;;8CACpD,sKAAC,+IAAI;oCAAC,MAAK;oCAAQ,WAAU;8CAAkB;;;;;;8CAC/C,sKAAC;oCAAO,SAAS;8EAAkB;8CAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBxE;GA/EwB;;QACS,yIAAO;;;KADhB","debugId":null}},
    {"offset": {"line": 891, "column": 0}, "map": {"version":3,"sources":["file:///D:/FYP/Fyp%20cursor/frontend/components/Layout.js"],"sourcesContent":["import Head from 'next/head';\r\nimport Navbar from './Navbar';\r\n\r\nexport default function Layout({ children }) {\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>🇵🇰 Awaam AI</title>\r\n        <meta name=\"description\" content=\"AI Assistant for Pakistani Documents\" />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" /> {/* Make sure to have a favicon in /public */}\r\n      </Head>\r\n\r\n      {/* App background and subtle radial gradient */}\r\n      <div className=\"relative bg-gray-900 text-gray-100 min-h-screen flex flex-col font-sans\">\r\n        <div className=\"pointer-events-none absolute inset-0 -z-10\" aria-hidden>\r\n          <div className=\"absolute left-0 right-0 top-[-10%] mx-auto h-72 w-72 rounded-full bg-emerald-500/10 blur-3xl\" />\r\n        </div>\r\n        <Navbar />\r\n        {/* Main content area with padding-top to offset the fixed navbar */}\r\n        {/* We use h-screen and pt-[57px] to make the content fill the viewport */}\r\n        <main className=\"flex-1 flex flex-col pt-[57px] h-screen\">\r\n          {children}\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEe,SAAS,OAAO,KAAY;QAAZ,EAAE,QAAQ,EAAE,GAAZ;IAC7B,qBACE;;0BACE,sKAAC,+IAAI;;kCACH,sKAAC;kCAAM;;;;;;kCACP,sKAAC;wBAAK,MAAK;wBAAc,SAAQ;;;;;;kCACjC,sKAAC;wBAAK,KAAI;wBAAO,MAAK;;;;;;oBAAiB;;;;;;;0BAIzC,sKAAC;gBAAI,WAAU;;kCACb,sKAAC;wBAAI,WAAU;wBAA6C,aAAW;kCACrE,cAAA,sKAAC;4BAAI,WAAU;;;;;;;;;;;kCAEjB,sKAAC,uIAAM;;;;;kCAGP,sKAAC;wBAAK,WAAU;kCACb;;;;;;;;;;;;;;AAKX;KAvBwB","debugId":null}},
    {"offset": {"line": 986, "column": 0}, "map": {"version":3,"sources":["file:///D:/FYP/Fyp%20cursor/frontend/components/LiquidEther.js"],"sourcesContent":["// // import { useEffect, useRef } from 'react';\r\n// // import * as THREE from 'three';\r\n// // import styles from './LiquidEther.module.css';\r\n\r\n// // export default function LiquidEther({\r\n// //   mouseForce = 20,\r\n// //   cursorSize = 70,\r\n// //   isViscous = false,\r\n// //   viscous = 15,\r\n// //   iterationsViscous = 8,\r\n// //   iterationsPoisson = 8,\r\n// //   dt = 0.014,\r\n// //   BFECC = true,\r\n// //   resolution = 0.1,\r\n// //   isBounce = false,\r\n// //   colors = ['#10B981', '#34D399', '#065F46'],\r\n// //   style = {},\r\n// //   className = '',\r\n// //   autoDemo = true,\r\n// //   autoSpeed = 0.2,\r\n// //   autoIntensity = 1.2,\r\n// //   takeoverDuration = 0.25,\r\n// //   autoResumeDelay = 1000,\r\n// //   autoRampDuration = 0.6\r\n// // }) {\r\n// //   const mountRef = useRef(null);\r\n// //   const webglRef = useRef(null);\r\n// //   const resizeObserverRef = useRef(null);\r\n// //   const rafRef = useRef(null);\r\n// //   const intersectionObserverRef = useRef(null);\r\n// //   const isVisibleRef = useRef(true);\r\n// //   const resizeRafRef = useRef(null);\r\n\r\n// //   useEffect(() => {\r\n// //     if (!mountRef.current) return;\r\n\r\n// //     function makePaletteTexture(stops) {\r\n// //       let arr;\r\n// //       if (Array.isArray(stops) && stops.length > 0) {\r\n// //         if (stops.length === 1) {\r\n// //           arr = [stops[0], stops[0]];\r\n// //         } else {\r\n// //           arr = stops;\r\n// //         }\r\n// //       } else {\r\n// //         arr = ['#ffffff', '#ffffff'];\r\n// //       }\r\n// //       const w = arr.length;\r\n// //       const data = new Uint8Array(w * 4);\r\n// //       for (let i = 0; i < w; i++) {\r\n// //         const c = new THREE.Color(arr[i]);\r\n// //         data[i * 4 + 0] = Math.round(c.r * 255);\r\n// //         data[i * 4 + 1] = Math.round(c.g * 255);\r\n// //         data[i * 4 + 2] = Math.round(c.b * 255);\r\n// //         data[i * 4 + 3] = 255;\r\n// //       }\r\n// //       const tex = new THREE.DataTexture(data, w, 1, THREE.RGBAFormat);\r\n// //       tex.magFilter = THREE.LinearFilter;\r\n// //       tex.minFilter = THREE.LinearFilter;\r\n// //       tex.wrapS = THREE.ClampToEdgeWrapping;\r\n// //       tex.wrapT = THREE.ClampToEdgeWrapping;\r\n// //       tex.generateMipmaps = false;\r\n// //       tex.needsUpdate = true;\r\n// //       return tex;\r\n// //     }\r\n\r\n// //     const paletteTex = makePaletteTexture(colors);\r\n// //     const bgVec4 = new THREE.Vector4(0, 0, 0, 0);\r\n\r\n// //     class CommonClass {\r\n// //       constructor() {\r\n// //         this.width = 0;\r\n// //         this.height = 0;\r\n// //         this.aspect = 1;\r\n// //         this.pixelRatio = 1;\r\n// //         this.isMobile = false;\r\n// //         this.breakpoint = 768;\r\n// //         this.fboWidth = null;\r\n// //         this.fboHeight = null;\r\n// //         this.time = 0;\r\n// //         this.delta = 0;\r\n// //         this.container = null;\r\n// //         this.renderer = null;\r\n// //         this.clock = null;\r\n// //       }\r\n// //       init(container) {\r\n// //         this.container = container;\r\n// //         this.pixelRatio = Math.min(window.devicePixelRatio || 1, 2);\r\n// //         this.resize();\r\n// //         this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n// //         this.renderer.autoClear = false;\r\n// //         this.renderer.setClearColor(new THREE.Color(0x000000), 0);\r\n// //         this.renderer.setPixelRatio(this.pixelRatio);\r\n// //         this.renderer.setSize(this.width, this.height);\r\n// //         this.renderer.domElement.style.width = '100%';\r\n// //         this.renderer.domElement.style.height = '100%';\r\n// //         this.renderer.domElement.style.display = 'block';\r\n// //         this.clock = new THREE.Clock();\r\n// //         this.clock.start();\r\n// //       }\r\n// //       resize() {\r\n// //         if (!this.container) return;\r\n// //         const rect = this.container.getBoundingClientRect();\r\n// //         this.width = Math.max(1, Math.floor(rect.width));\r\n// //         this.height = Math.max(1, Math.floor(rect.height));\r\n// //         this.aspect = this.width / this.height;\r\n// //         if (this.renderer) this.renderer.setSize(this.width, this.height, false);\r\n// //       }\r\n// //       update() {\r\n// //         this.delta = this.clock.getDelta();\r\n// //         this.time += this.delta;\r\n// //       }\r\n// //     }\r\n// //     const Common = new CommonClass();\r\n\r\n// //     class MouseClass {\r\n// //       constructor() {\r\n// //         this.mouseMoved = false;\r\n// //         this.coords = new THREE.Vector2();\r\n// //         this.coords_old = new THREE.Vector2();\r\n// //         this.diff = new THREE.Vector2();\r\n// //         this.timer = null;\r\n// //         this.container = null;\r\n// //         this._onMouseMove = this.onDocumentMouseMove.bind(this);\r\n// //         this._onTouchStart = this.onDocumentTouchStart.bind(this);\r\n// //         this._onTouchMove = this.onDocumentTouchMove.bind(this);\r\n// //         this._onMouseEnter = this.onMouseEnter.bind(this);\r\n// //         this._onMouseLeave = this.onMouseLeave.bind(this);\r\n// //         this._onTouchEnd = this.onTouchEnd.bind(this);\r\n// //         this.isHoverInside = false;\r\n// //         this.hasUserControl = false;\r\n// //         this.isAutoActive = false;\r\n// //         this.autoIntensity = 2.0;\r\n// //         this.takeoverActive = false;\r\n// //         this.takeoverStartTime = 0;\r\n// //         this.takeoverDuration = 0.25;\r\n// //         this.takeoverFrom = new THREE.Vector2();\r\n// //         this.takeoverTo = new THREE.Vector2();\r\n// //         this.onInteract = null;\r\n// //       }\r\n// //       init(container) {\r\n// //         this.container = container;\r\n// //         container.addEventListener('mousemove', this._onMouseMove, false);\r\n// //         container.addEventListener('touchstart', this._onTouchStart, false);\r\n// //         container.addEventListener('touchmove', this._onTouchMove, false);\r\n// //         container.addEventListener('mouseenter', this._onMouseEnter, false);\r\n// //         container.addEventListener('mouseleave', this._onMouseLeave, false);\r\n// //         container.addEventListener('touchend', this._onTouchEnd, false);\r\n// //       }\r\n// //       dispose() {\r\n// //         if (!this.container) return;\r\n// //         this.container.removeEventListener('mousemove', this._onMouseMove, false);\r\n// //         this.container.removeEventListener('touchstart', this._onTouchStart, false);\r\n// //         this.container.removeEventListener('touchmove', this._onTouchMove, false);\r\n// //         this.container.removeEventListener('mouseenter', this._onMouseEnter, false);\r\n// //         this.container.removeEventListener('mouseleave', this._onMouseLeave, false);\r\n// //         this.container.removeEventListener('touchend', this._onTouchEnd, false);\r\n// //       }\r\n// //       setCoords(x, y) {\r\n// //         if (!this.container) return;\r\n// //         if (this.timer) clearTimeout(this.timer);\r\n// //         const rect = this.container.getBoundingClientRect();\r\n// //         const nx = (x - rect.left) / rect.width;\r\n// //         const ny = (y - rect.top) / rect.height;\r\n// //         this.coords.set(nx * 2 - 1, -(ny * 2 - 1));\r\n// //         this.mouseMoved = true;\r\n// //         this.timer = setTimeout(() => {\r\n// //           this.mouseMoved = false;\r\n// //         }, 100);\r\n// //       }\r\n// //       setNormalized(nx, ny) {\r\n// //         this.coords.set(nx, ny);\r\n// //         this.mouseMoved = true;\r\n// //       }\r\n// //       onDocumentMouseMove(event) {\r\n// //         if (this.onInteract) this.onInteract();\r\n// //         const rect = this.container.getBoundingClientRect();\r\n// //         const nx = (event.clientX - rect.left) / rect.width;\r\n// //         const ny = (event.clientY - rect.top) / rect.height;\r\n// //         this.takeoverFrom.copy(this.coords);\r\n// //         this.takeoverTo.set(nx * 2 - 1, -(ny * 2 - 1));\r\n// //         this.takeoverStartTime = performance.now();\r\n// //         this.takeoverActive = true;\r\n// //         this.hasUserControl = true;\r\n// //         this.isAutoActive = false;\r\n// //       }\r\n// //       onDocumentTouchStart(event) {\r\n// //         if (event.touches.length === 1) {\r\n// //           const t = event.touches[0];\r\n// //           if (this.onInteract) this.onInteract();\r\n// //           this.setCoords(t.pageX, t.pageY);\r\n// //           this.hasUserControl = true;\r\n// //         }\r\n// //       }\r\n// //       onDocumentTouchMove(event) {\r\n// //         if (event.touches.length === 1) {\r\n// //           const t = event.touches[0];\r\n// //           if (this.onInteract) this.onInteract();\r\n// //           this.setCoords(t.pageX, t.pageY);\r\n// //         }\r\n// //       }\r\n// //       onTouchEnd() { this.isHoverInside = false; }\r\n// //       onMouseEnter() { this.isHoverInside = true; }\r\n// //       onMouseLeave() { this.isHoverInside = false; }\r\n// //       update() {\r\n// //         if (this.takeoverActive) {\r\n// //           const t = (performance.now() - this.takeoverStartTime) / (this.takeoverDuration * 1000);\r\n// //           if (t >= 1) {\r\n// //             this.takeoverActive = false;\r\n// //             this.coords.copy(this.takeoverTo);\r\n// //             this.coords_old.copy(this.coords);\r\n// //             this.diff.set(0, 0);\r\n// //           } else {\r\n// //             const k = t * t * (3 - 2 * t);\r\n// //             this.coords.copy(this.takeoverFrom).lerp(this.takeoverTo, k);\r\n// //           }\r\n// //         }\r\n// //         this.diff.subVectors(this.coords, this.coords_old);\r\n// //         this.coords_old.copy(this.coords);\r\n// //         if (this.coords_old.x === 0 && this.coords_old.y === 0) this.diff.set(0, 0);\r\n// //         if (this.isAutoActive && !this.takeoverActive) this.diff.multiplyScalar(this.autoIntensity);\r\n// //       }\r\n// //     }\r\n// //     const Mouse = new MouseClass();\r\n\r\n// //     class AutoDriver {\r\n// //       constructor(mouse, manager, opts) {\r\n// //         this.mouse = mouse;\r\n// //         this.manager = manager;\r\n// //         this.enabled = opts.enabled;\r\n// //         this.speed = opts.speed;\r\n// //         this.resumeDelay = opts.resumeDelay || 3000;\r\n// //         this.rampDurationMs = (opts.rampDuration || 0) * 1000;\r\n// //         this.active = false;\r\n// //         this.current = new THREE.Vector2(0, 0);\r\n// //         this.target = new THREE.Vector2();\r\n// //         this.lastTime = performance.now();\r\n// //         this.activationTime = 0;\r\n// //         this.margin = 0.2;\r\n// //         this._tmpDir = new THREE.Vector2();\r\n// //         this.pickNewTarget();\r\n// //       }\r\n// //       pickNewTarget() {\r\n// //         const r = Math.random;\r\n// //         this.target.set((r() * 2 - 1) * (1 - this.margin), (r() * 2 - 1) * (1 - this.margin));\r\n// //       }\r\n// //       forceStop() { this.active = false; this.mouse.isAutoActive = false; }\r\n// //       update() {\r\n// //         if (!this.enabled) return;\r\n// //         const now = performance.now();\r\n// //         const idle = now - this.manager.lastUserInteraction;\r\n// //         if (idle < this.resumeDelay) { if (this.active) this.forceStop(); return; }\r\n// //         if (this.mouse.isHoverInside) { if (this.active) this.forceStop(); return; }\r\n// //         if (!this.active) { this.active = true; this.current.copy(this.mouse.coords); this.lastTime = now; this.activationTime = now; }\r\n// //         this.mouse.isAutoActive = true;\r\n// //         let dtSec = (now - this.lastTime) / 1000; this.lastTime = now; if (dtSec > 0.2) dtSec = 0.016;\r\n// //         const dir = this._tmpDir.subVectors(this.target, this.current); const dist = dir.length();\r\n// //         if (dist < 0.01) { this.pickNewTarget(); return; }\r\n// //         dir.normalize();\r\n// //         let ramp = 1; if (this.rampDurationMs > 0) { const t = Math.min(1, (now - this.activationTime) / this.rampDurationMs); ramp = t * t * (3 - 2 * t); }\r\n// //         const step = this.speed * dtSec * ramp; const move = Math.min(step, dist); this.current.addScaledVector(dir, move); this.mouse.setNormalized(this.current.x, this.current.y);\r\n// //       }\r\n// //     }\r\n\r\n// //     const face_vert = `attribute vec3 position; uniform vec2 px; uniform vec2 boundarySpace; varying vec2 uv; precision highp float; void main(){ vec3 pos = position; vec2 scale = 1.0 - boundarySpace * 2.0; pos.xy = pos.xy * scale; uv = vec2(0.5)+(pos.xy)*0.5; gl_Position = vec4(pos, 1.0); }`;\r\n// //     const line_vert = `attribute vec3 position; uniform vec2 px; precision highp float; varying vec2 uv; void main(){ vec3 pos = position; uv = 0.5 + pos.xy * 0.5; vec2 n = sign(pos.xy); pos.xy = abs(pos.xy) - px * 1.0; pos.xy *= n; gl_Position = vec4(pos, 1.0); }`;\r\n// //     const mouse_vert = `precision highp float; attribute vec3 position; attribute vec2 uv; uniform vec2 center; uniform vec2 scale; uniform vec2 px; varying vec2 vUv; void main(){ vec2 pos = position.xy * scale * 2.0 * px + center; vUv = uv; gl_Position = vec4(pos, 0.0, 1.0); }`;\r\n// //     const advection_frag = `precision highp float; uniform sampler2D velocity; uniform float dt; uniform bool isBFECC; uniform vec2 fboSize; uniform vec2 px; varying vec2 uv; void main(){ vec2 ratio = max(fboSize.x, fboSize.y) / fboSize; if(isBFECC == false){ vec2 vel = texture2D(velocity, uv).xy; vec2 uv2 = uv - vel * dt * ratio; vec2 newVel = texture2D(velocity, uv2).xy; gl_FragColor = vec4(newVel, 0.0, 0.0);} else { vec2 spot_new = uv; vec2 vel_old = texture2D(velocity, uv).xy; vec2 spot_old = spot_new - vel_old * dt * ratio; vec2 vel_new1 = texture2D(velocity, spot_old).xy; vec2 spot_new2 = spot_old + vel_new1 * dt * ratio; vec2 error = spot_new2 - spot_new; vec2 spot_new3 = spot_new - error / 2.0; vec2 vel_2 = texture2D(velocity, spot_new3).xy; vec2 spot_old2 = spot_new3 - vel_2 * dt * ratio; vec2 newVel2 = texture2D(velocity, spot_old2).xy; gl_FragColor = vec4(newVel2, 0.0, 0.0);} }`;\r\n// //     const color_frag = `precision highp float; uniform sampler2D velocity; uniform sampler2D palette; uniform vec4 bgColor; varying vec2 uv; void main(){ vec2 vel = texture2D(velocity, uv).xy; float lenv = clamp(length(vel), 0.0, 1.0); vec3 c = texture2D(palette, vec2(lenv, 0.5)).rgb; vec3 outRGB = mix(bgColor.rgb, c, lenv); float outA = mix(bgColor.a, 1.0, lenv); gl_FragColor = vec4(outRGB, outA);} `;\r\n// //     const divergence_frag = `precision highp float; uniform sampler2D velocity; uniform float dt; uniform vec2 px; varying vec2 uv; void main(){ float x0 = texture2D(velocity, uv-vec2(px.x, 0.0)).x; float x1 = texture2D(velocity, uv+vec2(px.x, 0.0)).x; float y0 = texture2D(velocity, uv-vec2(0.0, px.y)).y; float y1 = texture2D(velocity, uv+vec2(0.0, px.y)).y; float divergence = (x1 - x0 + y1 - y0) / 2.0; gl_FragColor = vec4(divergence / dt);} `;\r\n// //     const externalForce_frag = `precision highp float; uniform vec2 force; uniform vec2 center; uniform vec2 scale; uniform vec2 px; varying vec2 vUv; void main(){ vec2 circle = (vUv - 0.5) * 2.0; float d = 1.0 - min(length(circle), 1.0); d *= d; gl_FragColor = vec4(force * d, 0.0, 1.0);} `;\r\n// //     const poisson_frag = `precision highp float; uniform sampler2D pressure; uniform sampler2D divergence; uniform vec2 px; varying vec2 uv; void main(){ float p0 = texture2D(pressure, uv + vec2(px.x * 2.0, 0.0)).r; float p1 = texture2D(pressure, uv - vec2(px.x * 2.0, 0.0)).r; float p2 = texture2D(pressure, uv + vec2(0.0, px.y * 2.0)).r; float p3 = texture2D(pressure, uv - vec2(0.0, px.y * 2.0)).r; float div = texture2D(divergence, uv).r; float newP = (p0 + p1 + p2 + p3) / 4.0 - div; gl_FragColor = vec4(newP);} `;\r\n// //     const pressure_frag = `precision highp float; uniform sampler2D pressure; uniform sampler2D velocity; uniform vec2 px; uniform float dt; varying vec2 uv; void main(){ float step = 1.0; float p0 = texture2D(pressure, uv + vec2(px.x * step, 0.0)).r; float p1 = texture2D(pressure, uv - vec2(px.x * step, 0.0)).r; float p2 = texture2D(pressure, uv + vec2(0.0, px.y * step)).r; float p3 = texture2D(pressure, uv - vec2(0.0, px.y * step)).r; vec2 v = texture2D(velocity, uv).xy; vec2 gradP = vec2(p0 - p1, p2 - p3) * 0.5; v = v - gradP * dt; gl_FragColor = vec4(v, 0.0, 1.0);} `;\r\n// //     const viscous_frag = `precision highp float; uniform sampler2D velocity; uniform sampler2D velocity_new; uniform float v; uniform vec2 px; uniform float dt; varying vec2 uv; void main(){ vec2 old = texture2D(velocity, uv).xy; vec2 new0 = texture2D(velocity_new, uv + vec2(px.x * 2.0, 0.0)).xy; vec2 new1 = texture2D(velocity_new, uv - vec2(px.x * 2.0, 0.0)).xy; vec2 new2 = texture2D(velocity_new, uv + vec2(0.0, px.y * 2.0)).xy; vec2 new3 = texture2D(velocity_new, uv - vec2(0.0, px.y * 2.0)).xy; vec2 newv = 4.0 * old + v * dt * (new0 + new1 + new2 + new3); newv /= 4.0 * (1.0 + v * dt); gl_FragColor = vec4(newv, 0.0, 0.0);} `;\r\n\r\n// //     class ShaderPass {\r\n// //       constructor(props) {\r\n// //         this.props = props || {};\r\n// //         this.uniforms = this.props.material?.uniforms;\r\n// //         this.scene = null; this.camera = null; this.material = null; this.geometry = null; this.plane = null;\r\n// //       }\r\n// //       init() {\r\n// //         this.scene = new THREE.Scene(); this.camera = new THREE.Camera();\r\n// //         if (this.uniforms) { this.material = new THREE.RawShaderMaterial(this.props.material); this.geometry = new THREE.PlaneGeometry(2.0, 2.0); this.plane = new THREE.Mesh(this.geometry, this.material); this.scene.add(this.plane); }\r\n// //       }\r\n// //       update() { Common.renderer.setRenderTarget(this.props.output || null); Common.renderer.render(this.scene, this.camera); Common.renderer.setRenderTarget(null); }\r\n// //     }\r\n\r\n// //     class Advection extends ShaderPass {\r\n// //       constructor(simProps) {\r\n// //         super({ material: { vertexShader: face_vert, fragmentShader: advection_frag, uniforms: { boundarySpace: { value: simProps.cellScale }, px: { value: simProps.cellScale }, fboSize: { value: simProps.fboSize }, velocity: { value: simProps.src.texture }, dt: { value: simProps.dt }, isBFECC: { value: true } } }, output: simProps.dst });\r\n// //         this.uniforms = this.props.material.uniforms; this.init(); this.createBoundary();\r\n// //       }\r\n// //       createBoundary() {\r\n// //         const boundaryG = new THREE.BufferGeometry();\r\n// //         const vertices_boundary = new Float32Array([ -1,-1,0,-1,1,0,-1,1,0,1,1,0,1,1,0,1,-1,0,1,-1,0,-1,-1,0 ]);\r\n// //         boundaryG.setAttribute('position', new THREE.BufferAttribute(vertices_boundary, 3));\r\n// //         const boundaryM = new THREE.RawShaderMaterial({ vertexShader: line_vert, fragmentShader: advection_frag, uniforms: this.uniforms });\r\n// //         this.line = new THREE.LineSegments(boundaryG, boundaryM); this.scene.add(this.line);\r\n// //       }\r\n// //       update({ dt, isBounce, BFECC }) { this.uniforms.dt.value = dt; this.line.visible = isBounce; this.uniforms.isBFECC.value = BFECC; super.update(); }\r\n// //     }\r\n\r\n// //     class ExternalForce extends ShaderPass {\r\n// //       constructor(simProps) { super({ output: simProps.dst }); this.init(simProps); }\r\n// //       init(simProps) {\r\n// //         super.init();\r\n// //         const mouseG = new THREE.PlaneGeometry(1,1);\r\n// //         const mouseM = new THREE.RawShaderMaterial({ vertexShader: mouse_vert, fragmentShader: externalForce_frag, blending: THREE.AdditiveBlending, depthWrite: false, uniforms: { px: { value: simProps.cellScale }, force: { value: new THREE.Vector2(0.0,0.0) }, center: { value: new THREE.Vector2(0.0,0.0) }, scale: { value: new THREE.Vector2(simProps.cursor_size, simProps.cursor_size) } } });\r\n// //         this.mouse = new THREE.Mesh(mouseG, mouseM); this.scene.add(this.mouse);\r\n// //       }\r\n// //       update(props) {\r\n// //         const forceX = (Mouse.diff.x / 2) * props.mouse_force; const forceY = (Mouse.diff.y / 2) * props.mouse_force;\r\n// //         const cursorSizeX = props.cursor_size * props.cellScale.x; const cursorSizeY = props.cursor_size * props.cellScale.y;\r\n// //         const centerX = Math.min(Math.max(Mouse.coords.x, -1 + cursorSizeX + props.cellScale.x * 2), 1 - cursorSizeX - props.cellScale.x * 2);\r\n// //         const centerY = Math.min(Math.max(Mouse.coords.y, -1 + cursorSizeY + props.cellScale.y * 2), 1 - cursorSizeY - props.cellScale.y * 2);\r\n// //         const uniforms = this.mouse.material.uniforms; uniforms.force.value.set(forceX, forceY); uniforms.center.value.set(centerX, centerY); uniforms.scale.value.set(props.cursor_size, props.cursor_size); super.update();\r\n// //       }\r\n// //     }\r\n\r\n// //     class Viscous extends ShaderPass {\r\n// //       constructor(simProps) { super({ material: { vertexShader: face_vert, fragmentShader: viscous_frag, uniforms: { boundarySpace: { value: simProps.boundarySpace }, velocity: { value: simProps.src.texture }, velocity_new: { value: simProps.dst_.texture }, v: { value: simProps.viscous }, px: { value: simProps.cellScale }, dt: { value: simProps.dt } } }, output: simProps.dst, output0: simProps.dst_, output1: simProps.dst }); this.init(); }\r\n// //       update({ viscous, iterations, dt }) { let fbo_in, fbo_out; this.uniforms.v.value = viscous; for (let i = 0; i < iterations; i++) { if (i % 2 === 0) { fbo_in = this.props.output0; fbo_out = this.props.output1; } else { fbo_in = this.props.output1; fbo_out = this.props.output0; } this.uniforms.velocity_new.value = fbo_in.texture; this.props.output = fbo_out; this.uniforms.dt.value = dt; super.update(); } return fbo_out; }\r\n// //     }\r\n\r\n// //     class Divergence extends ShaderPass {\r\n// //       constructor(simProps) { super({ material: { vertexShader: face_vert, fragmentShader: divergence_frag, uniforms: { boundarySpace: { value: simProps.boundarySpace }, velocity: { value: simProps.src.texture }, px: { value: simProps.cellScale }, dt: { value: simProps.dt } } }, output: simProps.dst }); this.init(); }\r\n// //       update({ vel }) { this.uniforms.velocity.value = vel.texture; super.update(); }\r\n// //     }\r\n\r\n// //     class Poisson extends ShaderPass {\r\n// //       constructor(simProps) { super({ material: { vertexShader: face_vert, fragmentShader: poisson_frag, uniforms: { boundarySpace: { value: simProps.boundarySpace }, pressure: { value: simProps.dst_.texture }, divergence: { value: simProps.src.texture }, px: { value: simProps.cellScale } } }, output: simProps.dst, output0: simProps.dst_, output1: simProps.dst }); this.init(); }\r\n// //       update({ iterations }) { let p_in, p_out; for (let i = 0; i < iterations; i++) { if (i % 2 === 0) { p_in = this.props.output0; p_out = this.props.output1; } else { p_in = this.props.output1; p_out = this.props.output0; } this.uniforms.pressure.value = p_in.texture; this.props.output = p_out; super.update(); } return p_out; }\r\n// //     }\r\n\r\n// //     class Pressure extends ShaderPass {\r\n// //       constructor(simProps) { super({ material: { vertexShader: face_vert, fragmentShader: pressure_frag, uniforms: { boundarySpace: { value: simProps.boundarySpace }, pressure: { value: simProps.src_p.texture }, velocity: { value: simProps.src_v.texture }, px: { value: simProps.cellScale }, dt: { value: simProps.dt } } }, output: simProps.dst }); this.init(); }\r\n// //       update({ vel, pressure }) { this.uniforms.velocity.value = vel.texture; this.uniforms.pressure.value = pressure.texture; super.update(); }\r\n// //     }\r\n\r\n// //     class Simulation {\r\n// //       constructor(options) {\r\n// //         this.options = { iterations_poisson: 32, iterations_viscous: 32, mouse_force: 20, resolution: 0.5, cursor_size: 100, viscous: 30, isBounce: false, dt: 0.014, isViscous: false, BFECC: true, ...options };\r\n// //         this.fbos = { vel_0: null, vel_1: null, vel_viscous0: null, vel_viscous1: null, div: null, pressure_0: null, pressure_1: null };\r\n// //         this.fboSize = new THREE.Vector2(); this.cellScale = new THREE.Vector2(); this.boundarySpace = new THREE.Vector2(); this.init();\r\n// //       }\r\n// //       init() { this.calcSize(); this.createAllFBO(); this.createShaderPass(); }\r\n// //       getFloatType() { const isIOS = /(iPad|iPhone|iPod)/i.test(navigator.userAgent); return isIOS ? THREE.HalfFloatType : THREE.FloatType; }\r\n// //       createAllFBO() { const type = this.getFloatType(); const opts = { type, depthBuffer: false, stencilBuffer: false, minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, wrapS: THREE.ClampToEdgeWrapping, wrapT: THREE.ClampToEdgeWrapping }; for (let key in this.fbos) { this.fbos[key] = new THREE.WebGLRenderTarget(this.fboSize.x, this.fboSize.y, opts); } }\r\n// //       createShaderPass() {\r\n// //         this.advection = new Advection({ cellScale: this.cellScale, fboSize: this.fboSize, dt: this.options.dt, src: this.fbos.vel_0, dst: this.fbos.vel_1 });\r\n// //         this.externalForce = new ExternalForce({ cellScale: this.cellScale, cursor_size: this.options.cursor_size, dst: this.fbos.vel_1 });\r\n// //         this.viscous = new Viscous({ cellScale: this.cellScale, boundarySpace: this.boundarySpace, viscous: this.options.viscous, src: this.fbos.vel_1, dst: this.fbos.vel_viscous1, dst_: this.fbos.vel_viscous0, dt: this.options.dt });\r\n// //         this.divergence = new Divergence({ cellScale: this.cellScale, boundarySpace: this.boundarySpace, src: this.fbos.vel_viscous0, dst: this.fbos.div, dt: this.options.dt });\r\n// //         this.poisson = new Poisson({ cellScale: this.cellScale, boundarySpace: this.boundarySpace, src: this.fbos.div, dst: this.fbos.pressure_1, dst_: this.fbos.pressure_0 });\r\n// //         this.pressure = new Pressure({ cellScale: this.cellScale, boundarySpace: this.boundarySpace, src_p: this.fbos.pressure_0, src_v: this.fbos.vel_viscous0, dst: this.fbos.vel_0, dt: this.options.dt });\r\n// //       }\r\n// //       calcSize() { const width = Math.max(1, Math.round(this.options.resolution * Common.width)); const height = Math.max(1, Math.round(this.options.resolution * Common.height)); const px_x = 1.0 / width; const px_y = 1.0 / height; this.cellScale.set(px_x, px_y); this.fboSize.set(width, height); }\r\n// //       resize() { this.calcSize(); for (let key in this.fbos) { this.fbos[key].setSize(this.fboSize.x, this.fboSize.y); } }\r\n// //       update() {\r\n// //         if (this.options.isBounce) { this.boundarySpace.set(0,0); } else { this.boundarySpace.copy(this.cellScale); }\r\n// //         this.advection.update({ dt: this.options.dt, isBounce: this.options.isBounce, BFECC: this.options.BFECC });\r\n// //         this.externalForce.update({ cursor_size: this.options.cursor_size, mouse_force: this.options.mouse_force, cellScale: this.cellScale });\r\n// //         let vel = this.fbos.vel_1;\r\n// //         if (this.options.isViscous) { vel = this.viscous.update({ viscous: this.options.viscous, iterations: this.options.iterations_viscous, dt: this.options.dt }); }\r\n// //         this.divergence.update({ vel });\r\n// //         const pressure = this.poisson.update({ iterations: this.options.iterations_poisson });\r\n// //         this.pressure.update({ vel, pressure });\r\n// //       }\r\n// //     }\r\n\r\n// //     class Output { constructor(){ this.init(); }\r\n// //       init(){ this.simulation = new Simulation(); this.scene = new THREE.Scene(); this.camera = new THREE.Camera(); this.output = new THREE.Mesh(new THREE.PlaneGeometry(2,2), new THREE.RawShaderMaterial({ vertexShader: face_vert, fragmentShader: color_frag, transparent: true, depthWrite: false, uniforms: { velocity: { value: this.simulation.fbos.vel_0.texture }, boundarySpace: { value: new THREE.Vector2() }, palette: { value: paletteTex }, bgColor: { value: bgVec4 } } })); this.scene.add(this.output); }\r\n// //       resize(){ this.simulation.resize(); }\r\n// //       render(){ Common.renderer.setRenderTarget(null); Common.renderer.render(this.scene, this.camera); }\r\n// //       update(){ this.simulation.update(); this.render(); }\r\n// //     }\r\n\r\n// //     class WebGLManager {\r\n// //       constructor(props){ this.props = props; Common.init(props.$wrapper); Mouse.init(props.$wrapper); Mouse.autoIntensity = props.autoIntensity; Mouse.takeoverDuration = props.takeoverDuration; this.lastUserInteraction = performance.now(); Mouse.onInteract = () => { this.lastUserInteraction = performance.now(); if (this.autoDriver) this.autoDriver.forceStop(); }; this.autoDriver = new AutoDriver(Mouse, this, { enabled: props.autoDemo, speed: props.autoSpeed, resumeDelay: props.autoResumeDelay, rampDuration: props.autoRampDuration }); this.init(); this._loop = this.loop.bind(this); this._resize = this.resize.bind(this); window.addEventListener('resize', this._resize); this._onVisibility = () => { const hidden = document.hidden; if (hidden) { this.pause(); } else if (isVisibleRef.current) { this.start(); } }; document.addEventListener('visibilitychange', this._onVisibility); this.running = false; }\r\n// //       init(){ this.props.$wrapper.prepend(Common.renderer.domElement); this.output = new Output(); }\r\n// //       resize(){ Common.resize(); this.output.resize(); }\r\n// //       render(){ if (this.autoDriver) this.autoDriver.update(); Mouse.update(); Common.update(); this.output.update(); }\r\n// //       loop(){ if (!this.running) return; this.render(); rafRef.current = requestAnimationFrame(this._loop); }\r\n// //       start(){ if (this.running) return; this.running = true; this._loop(); }\r\n// //       pause(){ this.running = false; if (rafRef.current) { cancelAnimationFrame(rafRef.current); rafRef.current = null; } }\r\n// //       dispose(){ try { window.removeEventListener('resize', this._resize); document.removeEventListener('visibilitychange', this._onVisibility); Mouse.dispose(); if (Common.renderer) { const canvas = Common.renderer.domElement; if (canvas && canvas.parentNode) canvas.parentNode.removeChild(canvas); Common.renderer.dispose(); } } catch(e){ void 0; } }\r\n// //     }\r\n\r\n// //     const container = mountRef.current; container.style.position = container.style.position || 'relative'; container.style.overflow = container.style.overflow || 'hidden';\r\n// //     const webgl = new WebGLManager({ $wrapper: container, autoDemo, autoSpeed, autoIntensity, takeoverDuration, autoResumeDelay, autoRampDuration }); webglRef.current = webgl;\r\n\r\n// //     const applyOptionsFromProps = () => { if (!webglRef.current) return; const sim = webglRef.current.output?.simulation; if (!sim) return; const prevRes = sim.options.resolution; Object.assign(sim.options, { mouse_force: mouseForce, cursor_size: cursorSize, isViscous, viscous, iterations_viscous: iterationsViscous, iterations_poisson: iterationsPoisson, dt, BFECC, resolution, isBounce }); if (resolution !== prevRes) { sim.resize(); } };\r\n// //     applyOptionsFromProps();\r\n// //     webgl.start();\r\n\r\n// //     const io = new IntersectionObserver(entries => { const entry = entries[0]; const isVisible = entry.isIntersecting && entry.intersectionRatio > 0; isVisibleRef.current = isVisible; if (!webglRef.current) return; if (isVisible && !document.hidden) { webglRef.current.start(); } else { webglRef.current.pause(); } }, { threshold: [0, 0.01, 0.1] });\r\n// //     io.observe(container); intersectionObserverRef.current = io;\r\n\r\n// //     const ro = new ResizeObserver(() => { if (!webglRef.current) return; if (resizeRafRef.current) cancelAnimationFrame(resizeRafRef.current); resizeRafRef.current = requestAnimationFrame(() => { if (!webglRef.current) return; webglRef.current.resize(); }); });\r\n// //     ro.observe(container); resizeObserverRef.current = ro;\r\n\r\n// //     return () => { if (rafRef.current) cancelAnimationFrame(rafRef.current); if (resizeObserverRef.current) { try { resizeObserverRef.current.disconnect(); } catch(e){ void 0; } } if (intersectionObserverRef.current) { try { intersectionObserverRef.current.disconnect(); } catch(e){ void 0; } } if (webglRef.current) { webglRef.current.dispose(); } webglRef.current = null; };\r\n// //   }, [BFECC, cursorSize, dt, isBounce, isViscous, iterationsPoisson, iterationsViscous, mouseForce, resolution, viscous, colors, autoDemo, autoSpeed, autoIntensity, takeoverDuration, autoResumeDelay, autoRampDuration]);\r\n\r\n// //   useEffect(() => {\r\n// //     const webgl = webglRef.current; if (!webgl) return; const sim = webgl.output?.simulation; if (!sim) return; const prevRes = sim.options.resolution; Object.assign(sim.options, { mouse_force: mouseForce, cursor_size: cursorSize, isViscous, viscous, iterations_viscous: iterationsViscous, iterations_poisson: iterationsPoisson, dt, BFECC, resolution, isBounce }); if (webgl.autoDriver) { webgl.autoDriver.enabled = autoDemo; webgl.autoDriver.speed = autoSpeed; webgl.autoDriver.resumeDelay = autoResumeDelay; webgl.autoDriver.rampDurationMs = autoRampDuration * 1000; if (webgl.autoDriver.mouse) { webgl.autoDriver.mouse.autoIntensity = autoIntensity; webgl.autoDriver.mouse.takeoverDuration = takeoverDuration; } } if (resolution !== prevRes) { sim.resize(); }\r\n// //   }, [mouseForce, cursorSize, isViscous, viscous, iterationsViscous, iterationsPoisson, dt, BFECC, resolution, isBounce, autoDemo, autoSpeed, autoIntensity, takeoverDuration, autoResumeDelay, autoRampDuration]);\r\n\r\n// //   return <div ref={mountRef} className={`${styles.liquidEtherContainer} ${className || ''}`} style={style} />;\r\n// // }\r\n\r\n\r\n\r\n\r\n\r\n// // pages/dashboard.js\r\n// import dynamic from 'next/dynamic';\r\n// import Layout from '../components/Layout';\r\n// import { useAuth } from '../context/AuthContext';\r\n// import { useRouter } from 'next/router';\r\n// import { useEffect, useState } from 'react';\r\n// import api from '../lib/api';\r\n// import { getToken } from '../lib/auth';\r\n\r\n// // Lazy-load LiquidEther on client only\r\n// const LiquidEther = dynamic(() => import('../components/LiquidEther'), {\r\n//   ssr: false,\r\n//   loading: () => null\r\n// });\r\n\r\n// export default function Dashboard() {\r\n//   const { isLoggedIn, loading: authLoading } = useAuth();\r\n//   const router = useRouter();\r\n//   const [userData, setUserData] = useState(null);\r\n//   const [chatStats, setChatStats] = useState({ total: 0, today: 0 });\r\n//   const [recentChats, setRecentChats] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   // control whether to mount heavy background (client-only and wide screens)\r\n//   const [showBackground, setShowBackground] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     if (!authLoading && !isLoggedIn) router.push('/login');\r\n//   }, [authLoading, isLoggedIn, router]);\r\n\r\n//   // show background only on client & wide screens\r\n//   useEffect(() => {\r\n//     if (typeof window === 'undefined') return;\r\n//     const MIN_WIDTH = 900; // adjust if you want background on smaller screens\r\n//     const set = () => setShowBackground(window.innerWidth >= MIN_WIDTH);\r\n//     set();\r\n//     window.addEventListener('resize', set);\r\n//     return () => window.removeEventListener('resize', set);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (isLoggedIn) {\r\n//       fetchDashboardData();\r\n//     }\r\n//   }, [isLoggedIn]);\r\n\r\n//   const fetchDashboardData = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const token = getToken();\r\n//       const headers = { Authorization: `Bearer ${token}` };\r\n\r\n//       // fetch in parallel to reduce wait time\r\n//       const [statsRes, chatsRes] = await Promise.all([\r\n//         api.get('/user/stats', { headers }),\r\n//         api.get('/chats', { headers })\r\n//       ]);\r\n\r\n//       setUserData(statsRes.data.user);\r\n//       setChatStats({\r\n//         total: statsRes.data.totalChats,\r\n//         today: statsRes.data.todayChats\r\n//       });\r\n//       setRecentChats(Array.isArray(chatsRes.data) ? chatsRes.data.slice(0, 5) : []);\r\n//     } catch (error) {\r\n//       console.error('Failed to fetch dashboard data:', error);\r\n//       setUserData({ username: 'Guest', email: 'guest@example.com', createdAt: new Date() });\r\n//       setChatStats({ total: 0, today: 0 });\r\n//       setRecentChats([]);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   if (authLoading || !isLoggedIn) {\r\n//     return (\r\n//       <Layout>\r\n//         <div className=\"flex-1 grid place-items-center\">\r\n//           <p className=\"text-gray-400\">Loading...</p>\r\n//         </div>\r\n//       </Layout>\r\n//     );\r\n//   }\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <Layout>\r\n//         <div className=\"flex-1 grid place-items-center\">\r\n//           <div className=\"text-center\">\r\n//             <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-emerald-500 mx-auto mb-2\"></div>\r\n//             <p className=\"text-gray-400\">Loading dashboard...</p>\r\n//           </div>\r\n//         </div>\r\n//       </Layout>\r\n//     );\r\n//   }\r\n\r\n//   const demoLinks = [\r\n//     { title: 'Start a new chat', href: '/chat' },\r\n//     { title: 'See information', href: '/info' },\r\n//     { title: 'DLIMS status', href: '/chat' },\r\n//     { title: 'NADRA services', href: '/chat' },\r\n//   ];\r\n\r\n//   return (\r\n//     <Layout>\r\n//       <div className=\"relative\">\r\n//         {/* Liquid Ether background (client-only, wide screens) */}\r\n//         {showBackground && (\r\n//           <div className=\"absolute inset-0 -z-0\">\r\n//             <LiquidEther\r\n//               colors={[ '#0EA5A3', '#10B981', '#065F46' ]}\r\n//               mouseForce={18}\r\n//               cursorSize={80}\r\n//               isViscous={false}\r\n//               viscous={15}\r\n//               iterationsViscous={8}\r\n//               iterationsPoisson={8}\r\n//               resolution={0.35}\r\n//               isBounce={false}\r\n//               autoDemo={true}\r\n//               autoSpeed={0.35}\r\n//               autoIntensity={1.6}\r\n//               takeoverDuration={0.25}\r\n//               autoResumeDelay={3000}\r\n//               autoRampDuration={0.6}\r\n//               maxPixelRatio={1} // important: clamp DPR to reduce cost\r\n//               style={{ width:'100%', height:'100%' }}\r\n//             />\r\n//           </div>\r\n//         )}\r\n\r\n//         <div className=\"relative z-10 mx-auto max-w-6xl px-4 py-8 space-y-8\">\r\n//           {/* Welcome Section */}\r\n//           <section>\r\n//             <h1 className=\"text-2xl md:text-3xl font-bold text-gray-100\">\r\n//               Welcome back, {userData?.username || 'Guest'}!\r\n//             </h1>\r\n//             <p className=\"mt-1 text-gray-400\">Here's your personalized dashboard with insights and quick access.</p>\r\n//           </section>\r\n\r\n//           {/* Stats Cards */}\r\n//           <section className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-4\">\r\n//             <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-100\">Total Chats</h3>\r\n//               <p className=\"mt-2 text-2xl font-bold text-emerald-400\">{chatStats.total}</p>\r\n//             </div>\r\n\r\n//             <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-100\">Today's Chats</h3>\r\n//               <p className=\"mt-2 text-2xl font-bold text-emerald-400\">{chatStats.today}</p>\r\n//             </div>\r\n\r\n//             <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-100\">Account Status</h3>\r\n//               <p className=\"mt-2 text-sm text-emerald-400\">✓ Active</p>\r\n//             </div>\r\n\r\n//             <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-100\">Member Since</h3>\r\n//               <p className=\"mt-2 text-sm text-gray-400\">\r\n//                 {userData?.createdAt ? new Date(userData.createdAt).toLocaleDateString() : '2025'}\r\n//               </p>\r\n//             </div>\r\n//           </section>\r\n\r\n//           {/* Profile & Usage Section */}\r\n//           <section className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-3\">\r\n//             <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-100\">Your Profile</h3>\r\n//               <dl className=\"mt-3 space-y-1 text-sm text-gray-400\">\r\n//                 <div className=\"flex justify-between\"><dt>Username</dt><dd className=\"text-gray-200\">{userData?.username || 'Guest'}</dd></div>\r\n//                 <div className=\"flex justify-between\"><dt>Email</dt><dd className=\"text-gray-200\">{userData?.email || 'guest@example.com'}</dd></div>\r\n//                 <div className=\"flex justify-between\"><dt>Status</dt><dd className=\"text-emerald-400\">Online</dd></div>\r\n//               </dl>\r\n//             </div>\r\n\r\n//             <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-100\">Usage Insights</h3>\r\n//               <p className=\"mt-2 text-sm text-gray-400\">\r\n//                 {chatStats.today > 0 \r\n//                   ? `You've been active today with ${chatStats.today} chat${chatStats.today > 1 ? 's' : ''}.`\r\n//                   : 'Start your first chat today to get personalized insights.'\r\n//                 }\r\n//               </p>\r\n//               {chatStats.total > 0 && (\r\n//                 <p className=\"mt-2 text-xs text-gray-500\">\r\n//                   Average: {Math.round(chatStats.total / Math.max(1, Math.floor((Date.now() - new Date(userData?.createdAt || Date.now()).getTime()) / (1000 * 60 * 60 * 24))))} chats/day\r\n//                 </p>\r\n//               )}\r\n//             </div>\r\n\r\n//             <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\r\n//               <h3 className=\"text-lg font-semibold text-gray-100\">Tips & Tricks</h3>\r\n//               <ul className=\"mt-2 list-disc pl-5 text-sm text-gray-400\">\r\n//                 <li>Ask in Urdu or English</li>\r\n//                 <li>Prefix with department: \"NADRA: family registration\"</li>\r\n//                 <li>Use specific keywords for better results</li>\r\n//               </ul>\r\n//             </div>\r\n//           </section>\r\n\r\n//           {/* Recent Activity */}\r\n//           {recentChats.length > 0 && (\r\n//             <section>\r\n//               <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Recent Activity</h2>\r\n//               <div className=\"space-y-3\">\r\n//                 {recentChats.map((chat, index) => (\r\n//                   <div key={chat._id || index} className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4\">\r\n//                     <div className=\"flex justify-between items-start\">\r\n//                       <div>\r\n//                         <h4 className=\"text-sm font-medium text-gray-100\">{chat.title}</h4>\r\n//                         <p className=\"text-xs text-gray-500 mt-1\">{chat.lastMessage?.slice(0, 60) || 'No messages yet'}...</p>\r\n//                       </div>\r\n//                       <span className=\"text-xs text-gray-600\">\r\n//                         {chat.updatedAt ? new Date(chat.updatedAt).toLocaleDateString() : ''}\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n//             </section>\r\n//           )}\r\n\r\n//           {/* Government Services Overview */}\r\n//           <section>\r\n//             <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Government Services</h2>\r\n//             <div className=\"grid gap-3 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\r\n//               {['DLIMS', 'NADRA', 'DGIP', 'Zameen', 'ECP', 'FBR', 'SECP', 'PSP'].map((service) => (\r\n//                 <div key={service} className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4 text-center\">\r\n//                   <h4 className=\"text-sm font-medium text-gray-100\">{service}</h4>\r\n//                   <p className=\"text-xs text-gray-500 mt-1\">Government Service</p>\r\n//                   <a href=\"/chat\" className=\"text-xs text-emerald-400 hover:text-emerald-300 mt-2 inline-block\">\r\n//                     Ask about {service} →\r\n//                   </a>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </section>\r\n\r\n//           {/* Quick Actions */}\r\n//           <section>\r\n//             <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Quick Actions</h2>\r\n//             <div className=\"grid gap-3 sm:grid-cols-2 md:grid-cols-3\">\r\n//               {demoLinks.map(link => (\r\n//                 <a key={link.title} href={link.href} className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4 text-sm text-gray-300 hover:border-emerald-800 hover:text-white transition-colors\">\r\n//                   {link.title}\r\n//                 </a>\r\n//               ))}\r\n//             </div>\r\n//           </section>\r\n\r\n//           {/* News & Updates */}\r\n//           <section>\r\n//             <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Latest Updates</h2>\r\n//             <div className=\"space-y-3\">\r\n//               <div className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4\">\r\n//                 <h4 className=\"text-sm font-medium text-gray-100\">New DLIMS Features</h4>\r\n//                 <p className=\"text-xs text-gray-400 mt-1\">Updated information about DLIMS services and requirements.</p>\r\n//                 <span className=\"text-xs text-gray-600\">2 days ago</span>\r\n//               </div>\r\n//               <div className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4\">\r\n//                 <h4 className=\"text-sm font-medium text-gray-100\">NADRA Process Updates</h4>\r\n//                 <p className=\"text-xs text-gray-400 mt-1\">Streamlined procedures for CNIC applications.</p>\r\n//                 <span className=\"text-xs text-gray-600\">1 week ago</span>\r\n//               </div>\r\n//               <div className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4\">\r\n//                 <h4 className=\"text-sm font-medium text-gray-100\">System Maintenance</h4>\r\n//                 <p className=\"text-xs text-gray-400 mt-1\">Scheduled maintenance completed successfully.</p>\r\n//                 <span className=\"text-xs text-gray-600\">2 weeks ago</span>\r\n//               </div>\r\n//             </div>\r\n//           </section>\r\n//         </div>\r\n//       </div>\r\n//     </Layout>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//======================================================\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // components/LiquidEther.js\r\n// import { useEffect, useRef } from 'react';\r\n// import * as THREE from 'three';\r\n// import styles from './LiquidEther.module.css';\r\n\r\n// export default function LiquidEther({\r\n//   mouseForce = 20,\r\n//   cursorSize = 70,\r\n//   isViscous = false,\r\n//   viscous = 15,\r\n//   iterationsViscous = 8,\r\n//   iterationsPoisson = 8,\r\n//   dt = 0.014,\r\n//   BFECC = true,\r\n//   resolution = 0.12,\r\n//   isBounce = false,\r\n//   colors = ['#10B981', '#34D399', '#065F46'],\r\n//   style = {},\r\n//   className = '',\r\n//   autoDemo = true,\r\n//   autoSpeed = 0.2,\r\n//   autoIntensity = 1.2,\r\n//   takeoverDuration = 0.25,\r\n//   autoResumeDelay = 1000,\r\n//   autoRampDuration = 0.6,\r\n//   maxPixelRatio = 1 // clamp devicePixelRatio (important for perf)\r\n// }) {\r\n//   const mountRef = useRef(null);\r\n//   const webglRef = useRef(null);\r\n//   const resizeObserverRef = useRef(null);\r\n//   const rafRef = useRef(null);\r\n//   const intersectionObserverRef = useRef(null);\r\n//   const isVisibleRef = useRef(true);\r\n//   const resizeRafRef = useRef(null);\r\n\r\n//   // Helper: make palette texture\r\n//   function makePaletteTexture(stops) {\r\n//     let arr;\r\n//     if (Array.isArray(stops) && stops.length > 0) {\r\n//       arr = stops.length === 1 ? [stops[0], stops[0]] : stops;\r\n//     } else arr = ['#ffffff', '#ffffff'];\r\n//     const w = arr.length;\r\n//     const data = new Uint8Array(w * 4);\r\n//     for (let i = 0; i < w; i++) {\r\n//       const c = new THREE.Color(arr[i]);\r\n//       data[i * 4 + 0] = Math.round(c.r * 255);\r\n//       data[i * 4 + 1] = Math.round(c.g * 255);\r\n//       data[i * 4 + 2] = Math.round(c.b * 255);\r\n//       data[i * 4 + 3] = 255;\r\n//     }\r\n//     const tex = new THREE.DataTexture(data, w, 1, THREE.RGBAFormat);\r\n//     tex.magFilter = THREE.LinearFilter;\r\n//     tex.minFilter = THREE.LinearFilter;\r\n//     tex.wrapS = THREE.ClampToEdgeWrapping;\r\n//     tex.wrapT = THREE.ClampToEdgeWrapping;\r\n//     tex.generateMipmaps = false;\r\n//     tex.needsUpdate = true;\r\n//     return tex;\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     if (!mountRef.current) return;\r\n//     const paletteTex = makePaletteTexture(colors);\r\n//     const bgVec4 = new THREE.Vector4(0, 0, 0, 0);\r\n\r\n//     /* ---------------------\r\n//        Minimal Common wrapper (renderer + size handling)\r\n//        --------------------- */\r\n//     class CommonClass {\r\n//       constructor() {\r\n//         this.width = 0;\r\n//         this.height = 0;\r\n//         this.aspect = 1;\r\n//         this.pixelRatio = 1;\r\n//         this.container = null;\r\n//         this.renderer = null;\r\n//         this.clock = null;\r\n//       }\r\n//       init(container) {\r\n//         this.container = container;\r\n//         // clamp pixel ratio to avoid expensive hi-dpi rendering\r\n//         this.pixelRatio = Math.min(window.devicePixelRatio || 1, maxPixelRatio);\r\n//         this.resize();\r\n//         this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n//         this.renderer.autoClear = false;\r\n//         this.renderer.setClearColor(new THREE.Color(0x000000), 0);\r\n//         this.renderer.setPixelRatio(this.pixelRatio);\r\n//         this.renderer.setSize(this.width, this.height);\r\n//         this.renderer.domElement.style.width = '100%';\r\n//         this.renderer.domElement.style.height = '100%';\r\n//         this.renderer.domElement.style.display = 'block';\r\n//         this.clock = new THREE.Clock();\r\n//         this.clock.start();\r\n//       }\r\n//       resize() {\r\n//         if (!this.container) return;\r\n//         const rect = this.container.getBoundingClientRect();\r\n//         this.width = Math.max(1, Math.floor(rect.width));\r\n//         this.height = Math.max(1, Math.floor(rect.height));\r\n//         this.aspect = this.width / this.height;\r\n//         if (this.renderer) this.renderer.setSize(this.width, this.height, false);\r\n//       }\r\n//       update() {\r\n//         this.delta = this.clock.getDelta();\r\n//         this.time += this.delta;\r\n//       }\r\n//     }\r\n//     const Common = new CommonClass();\r\n\r\n//     /* ---------------------\r\n//        Mouse / AutoDriver (unchanged logic but kept simple)\r\n//        --------------------- */\r\n//     class MouseClass {\r\n//       constructor() {\r\n//         this.coords = new THREE.Vector2();\r\n//         this.coords_old = new THREE.Vector2();\r\n//         this.diff = new THREE.Vector2();\r\n//         this.timer = null;\r\n//         this.container = null;\r\n//         this._onMouseMove = this.onDocumentMouseMove.bind(this);\r\n//         this._onTouchStart = this.onDocumentTouchStart.bind(this);\r\n//         this._onTouchMove = this.onDocumentTouchMove.bind(this);\r\n//         this._onMouseEnter = this.onMouseEnter.bind(this);\r\n//         this._onMouseLeave = this.onMouseLeave.bind(this);\r\n//         this._onTouchEnd = this.onTouchEnd.bind(this);\r\n//         this.isHoverInside = false;\r\n//         this.hasUserControl = false;\r\n//         this.isAutoActive = false;\r\n//         this.autoIntensity = 2.0;\r\n//         this.takeoverActive = false;\r\n//         this.takeoverStartTime = 0;\r\n//         this.takeoverDuration = 0.25;\r\n//         this.takeoverFrom = new THREE.Vector2();\r\n//         this.takeoverTo = new THREE.Vector2();\r\n//         this.onInteract = null;\r\n//       }\r\n//       init(container) {\r\n//         this.container = container;\r\n//         container.addEventListener('mousemove', this._onMouseMove, false);\r\n//         container.addEventListener('touchstart', this._onTouchStart, false);\r\n//         container.addEventListener('touchmove', this._onTouchMove, false);\r\n//         container.addEventListener('mouseenter', this._onMouseEnter, false);\r\n//         container.addEventListener('mouseleave', this._onMouseLeave, false);\r\n//         container.addEventListener('touchend', this._onTouchEnd, false);\r\n//       }\r\n//       dispose() {\r\n//         if (!this.container) return;\r\n//         this.container.removeEventListener('mousemove', this._onMouseMove, false);\r\n//         this.container.removeEventListener('touchstart', this._onTouchStart, false);\r\n//         this.container.removeEventListener('touchmove', this._onTouchMove, false);\r\n//         this.container.removeEventListener('mouseenter', this._onMouseEnter, false);\r\n//         this.container.removeEventListener('mouseleave', this._onMouseLeave, false);\r\n//         this.container.removeEventListener('touchend', this._onTouchEnd, false);\r\n//       }\r\n//       setCoords(x, y) {\r\n//         if (!this.container) return;\r\n//         if (this.timer) clearTimeout(this.timer);\r\n//         const rect = this.container.getBoundingClientRect();\r\n//         const nx = (x - rect.left) / rect.width;\r\n//         const ny = (y - rect.top) / rect.height;\r\n//         this.coords.set(nx * 2 - 1, -(ny * 2 - 1));\r\n//         this.timer = setTimeout(() => {\r\n//           // no-op: used to mark movement end\r\n//         }, 100);\r\n//       }\r\n//       setNormalized(nx, ny) {\r\n//         this.coords.set(nx, ny);\r\n//       }\r\n//       onDocumentMouseMove(event) {\r\n//         if (this.onInteract) this.onInteract();\r\n//         const rect = this.container.getBoundingClientRect();\r\n//         const nx = (event.clientX - rect.left) / rect.width;\r\n//         const ny = (event.clientY - rect.top) / rect.height;\r\n//         this.takeoverFrom.copy(this.coords);\r\n//         this.takeoverTo.set(nx * 2 - 1, -(ny * 2 - 1));\r\n//         this.takeoverStartTime = performance.now();\r\n//         this.takeoverActive = true;\r\n//         this.hasUserControl = true;\r\n//         this.isAutoActive = false;\r\n//       }\r\n//       onDocumentTouchStart(event) {\r\n//         if (event.touches.length === 1) {\r\n//           const t = event.touches[0];\r\n//           if (this.onInteract) this.onInteract();\r\n//           this.setCoords(t.pageX, t.pageY);\r\n//           this.hasUserControl = true;\r\n//         }\r\n//       }\r\n//       onDocumentTouchMove(event) {\r\n//         if (event.touches.length === 1) {\r\n//           const t = event.touches[0];\r\n//           if (this.onInteract) this.onInteract();\r\n//           this.setCoords(t.pageX, t.pageY);\r\n//         }\r\n//       }\r\n//       onTouchEnd() { this.isHoverInside = false; }\r\n//       onMouseEnter() { this.isHoverInside = true; }\r\n//       onMouseLeave() { this.isHoverInside = false; }\r\n//       update() {\r\n//         if (this.takeoverActive) {\r\n//           const t = (performance.now() - this.takeoverStartTime) / (this.takeoverDuration * 1000);\r\n//           if (t >= 1) {\r\n//             this.takeoverActive = false;\r\n//             this.coords.copy(this.takeoverTo);\r\n//             this.coords_old.copy(this.coords);\r\n//             this.diff.set(0, 0);\r\n//           } else {\r\n//             const k = t * t * (3 - 2 * t);\r\n//             this.coords.copy(this.takeoverFrom).lerp(this.takeoverTo, k);\r\n//           }\r\n//         }\r\n//         this.diff.subVectors(this.coords, this.coords_old);\r\n//         this.coords_old.copy(this.coords);\r\n//         if (this.isAutoActive && !this.takeoverActive) this.diff.multiplyScalar(this.autoIntensity);\r\n//       }\r\n//     }\r\n//     const Mouse = new MouseClass();\r\n\r\n//     class AutoDriver {\r\n//       constructor(mouse, manager, opts) {\r\n//         this.mouse = mouse;\r\n//         this.manager = manager;\r\n//         this.enabled = opts.enabled;\r\n//         this.speed = opts.speed;\r\n//         this.resumeDelay = opts.resumeDelay || 3000;\r\n//         this.rampDurationMs = (opts.rampDuration || 0) * 1000;\r\n//         this.active = false;\r\n//         this.current = new THREE.Vector2(0, 0);\r\n//         this.target = new THREE.Vector2();\r\n//         this.lastTime = performance.now();\r\n//         this.activationTime = 0;\r\n//         this.margin = 0.2;\r\n//         this._tmpDir = new THREE.Vector2();\r\n//         this.pickNewTarget();\r\n//       }\r\n//       pickNewTarget() {\r\n//         const r = Math.random;\r\n//         this.target.set((r() * 2 - 1) * (1 - this.margin), (r() * 2 - 1) * (1 - this.margin));\r\n//       }\r\n//       forceStop() { this.active = false; this.mouse.isAutoActive = false; }\r\n//       update() {\r\n//         if (!this.enabled) return;\r\n//         const now = performance.now();\r\n//         const idle = now - this.manager.lastUserInteraction;\r\n//         if (idle < this.resumeDelay) { if (this.active) this.forceStop(); return; }\r\n//         if (this.mouse.isHoverInside) { if (this.active) this.forceStop(); return; }\r\n//         if (!this.active) { this.active = true; this.current.copy(this.mouse.coords); this.lastTime = now; this.activationTime = now; }\r\n//         this.mouse.isAutoActive = true;\r\n//         let dtSec = (now - this.lastTime) / 1000; this.lastTime = now; if (dtSec > 0.2) dtSec = 0.016;\r\n//         const dir = this._tmpDir.subVectors(this.target, this.current); const dist = dir.length();\r\n//         if (dist < 0.01) { this.pickNewTarget(); return; }\r\n//         dir.normalize();\r\n//         let ramp = 1; if (this.rampDurationMs > 0) { const t = Math.min(1, (now - this.activationTime) / this.rampDurationMs); ramp = t * t * (3 - 2 * t); }\r\n//         const step = this.speed * dtSec * ramp; const move = Math.min(step, dist); this.current.addScaledVector(dir, move); this.mouse.setNormalized(this.current.x, this.current.y);\r\n//       }\r\n//     }\r\n\r\n//     /* ---------------------\r\n//        Shader strings omitted here for brevity — same as original\r\n//        (use your complex shader strings from previous file)\r\n//        --------------------- */\r\n//     // For brevity in this snippet, reuse your shader strings from original code:\r\n//     const face_vert = `attribute vec3 position; uniform vec2 px; uniform vec2 boundarySpace; varying vec2 uv; precision highp float; void main(){ vec3 pos = position; vec2 scale = 1.0 - boundarySpace * 2.0; pos.xy = pos.xy * scale; uv = vec2(0.5)+(pos.xy)*0.5; gl_Position = vec4(pos, 1.0); }`;\r\n//     const line_vert = `attribute vec3 position; uniform vec2 px; precision highp float; varying vec2 uv; void main(){ vec3 pos = position; uv = 0.5 + pos.xy * 0.5; vec2 n = sign(pos.xy); pos.xy = abs(pos.xy) - px * 1.0; pos.xy *= n; gl_Position = vec4(pos, 1.0); }`;\r\n//     const mouse_vert = `precision highp float; attribute vec3 position; attribute vec2 uv; uniform vec2 center; uniform vec2 scale; uniform vec2 px; varying vec2 vUv; void main(){ vec2 pos = position.xy * scale * 2.0 * px + center; vUv = uv; gl_Position = vec4(pos, 0.0, 1.0); }`;\r\n//     const advection_frag = /* long shader */ `precision highp float; uniform sampler2D velocity; uniform float dt; uniform bool isBFECC; uniform vec2 fboSize; uniform vec2 px; varying vec2 uv; void main(){ vec2 ratio = max(fboSize.x, fboSize.y) / fboSize; if(isBFECC == false){ vec2 vel = texture2D(velocity, uv).xy; vec2 uv2 = uv - vel * dt * ratio; vec2 newVel = texture2D(velocity, uv2).xy; gl_FragColor = vec4(newVel, 0.0, 0.0);} else { vec2 spot_new = uv; vec2 vel_old = texture2D(velocity, uv).xy; vec2 spot_old = spot_new - vel_old * dt * ratio; vec2 vel_new1 = texture2D(velocity, spot_old).xy; vec2 spot_new2 = spot_old + vel_new1 * dt * ratio; vec2 error = spot_new2 - spot_new; vec2 spot_new3 = spot_new - error / 2.0; vec2 vel_2 = texture2D(velocity, spot_new3).xy; vec2 spot_old2 = spot_new3 - vel_2 * dt * ratio; vec2 newVel2 = texture2D(velocity, spot_old2).xy; gl_FragColor = vec4(newVel2, 0.0, 0.0);} }`;\r\n//     const color_frag = `precision highp float; uniform sampler2D velocity; uniform sampler2D palette; uniform vec4 bgColor; varying vec2 uv; void main(){ vec2 vel = texture2D(velocity, uv).xy; float lenv = clamp(length(vel), 0.0, 1.0); vec3 c = texture2D(palette, vec2(lenv, 0.5)).rgb; vec3 outRGB = mix(bgColor.rgb, c, lenv); float outA = mix(bgColor.a, 1.0, lenv); gl_FragColor = vec4(outRGB, outA);} `;\r\n//     const divergence_frag = `precision highp float; uniform sampler2D velocity; uniform float dt; uniform vec2 px; varying vec2 uv; void main(){ float x0 = texture2D(velocity, uv-vec2(px.x, 0.0)).x; float x1 = texture2D(velocity, uv+vec2(px.x, 0.0)).x; float y0 = texture2D(velocity, uv-vec2(0.0, px.y)).y; float y1 = texture2D(velocity, uv+vec2(0.0, px.y)).y; float divergence = (x1 - x0 + y1 - y0) / 2.0; gl_FragColor = vec4(divergence / dt);} `;\r\n//     const externalForce_frag = `precision highp float; uniform vec2 force; uniform vec2 center; uniform vec2 scale; uniform vec2 px; varying vec2 vUv; void main(){ vec2 circle = (vUv - 0.5) * 2.0; float d = 1.0 - min(length(circle), 1.0); d *= d; gl_FragColor = vec4(force * d, 0.0, 1.0);} `;\r\n//     const poisson_frag = `precision highp float; uniform sampler2D pressure; uniform sampler2D divergence; uniform vec2 px; varying vec2 uv; void main(){ float p0 = texture2D(pressure, uv + vec2(px.x * 2.0, 0.0)).r; float p1 = texture2D(pressure, uv - vec2(px.x * 2.0, 0.0)).r; float p2 = texture2D(pressure, uv + vec2(0.0, px.y * 2.0)).r; float p3 = texture2D(pressure, uv - vec2(0.0, px.y * 2.0)).r; float div = texture2D(divergence, uv).r; float newP = (p0 + p1 + p2 + p3) / 4.0 - div; gl_FragColor = vec4(newP);} `;\r\n//     const pressure_frag = `precision highp float; uniform sampler2D pressure; uniform sampler2D velocity; uniform vec2 px; uniform float dt; varying vec2 uv; void main(){ float step = 1.0; float p0 = texture2D(pressure, uv + vec2(px.x * step, 0.0)).r; float p1 = texture2D(pressure, uv - vec2(px.x * step, 0.0)).r; float p2 = texture2D(pressure, uv + vec2(0.0, px.y * step)).r; float p3 = texture2D(pressure, uv - vec2(0.0, px.y * step)).r; vec2 v = texture2D(velocity, uv).xy; vec2 gradP = vec2(p0 - p1, p2 - p3) * 0.5; v = v - gradP * dt; gl_FragColor = vec4(v, 0.0, 1.0);} `;\r\n//     const viscous_frag = `precision highp float; uniform sampler2D velocity; uniform sampler2D velocity_new; uniform float v; uniform vec2 px; uniform float dt; varying vec2 uv; void main(){ vec2 old = texture2D(velocity, uv).xy; vec2 new0 = texture2D(velocity_new, uv + vec2(px.x * 2.0, 0.0)).xy; vec2 new1 = texture2D(velocity_new, uv - vec2(px.x * 2.0, 0.0)).xy; vec2 new2 = texture2D(velocity_new, uv + vec2(0.0, px.y * 2.0)).xy; vec2 new3 = texture2D(velocity_new, uv - vec2(0.0, px.y * 2.0)).xy; vec2 newv = 4.0 * old + v * dt * (new0 + new1 + new2 + new3); newv /= 4.0 * (1.0 + v * dt); gl_FragColor = vec4(newv, 0.0, 0.0);} `;\r\n\r\n//     /* ---------------------\r\n//        ShaderPass / Simulation / Output / WebGLManager classes\r\n//        (same structure as your original but safely organized)\r\n//        --------------------- */\r\n//     // For brevity I keep logic compact but it's the same pipeline you had.\r\n//     // Create lightweight abstraction ShaderPass, Advection, ExternalForce, Viscous, Divergence, Poisson, Pressure\r\n//     // Create Simulation -> Output -> WebGLManager\r\n//     // Implementation mirrors your original code, with same functionality.\r\n\r\n//     // ... (implement classes exactly as in your original file, using above shader strings)\r\n//     // To keep this snippet readable I won't duplicate every line here, but in your project\r\n//     // paste your existing class implementations (Advection, Viscous, Poisson, etc.)\r\n//     // ensuring they reference the shader constants above and the Common, Mouse, and other instances.\r\n\r\n//     // --- BEGIN minimal functional wiring using your existing classes ---\r\n//     // We'll implement a simple wrapper that creates a Simulation-like loop with reduced cost.\r\n//     // If you want the full exact original code, paste your previous heavy functions here,\r\n//     // but keep these two critical perf changes:\r\n//     // 1) Common.init uses maxPixelRatio (done above)\r\n//     // 2) initialize inside requestIdleCallback (done below)\r\n//     // --- END wiring ---\r\n\r\n//     /* --------------\r\n//        Initialize webgl manager but defer to idle so first paint is fast\r\n//        -------------- */\r\n//     let canceled = false;\r\n//     let idleId = null;\r\n\r\n//     const initWebgl = () => {\r\n//       if (canceled) return;\r\n//       // reuse your original WebGLManager creation but ensure it's only called once\r\n//       // Minimal simplified manager for example (replace with your full manager implementation)\r\n//       class WebGLManager {\r\n//         constructor(props) {\r\n//           this.props = props;\r\n//           Common.init(props.$wrapper);\r\n//           Mouse.init(props.$wrapper);\r\n//           Mouse.autoIntensity = props.autoIntensity;\r\n//           Mouse.takeoverDuration = props.takeoverDuration;\r\n//           this.lastUserInteraction = performance.now();\r\n//           Mouse.onInteract = () => { this.lastUserInteraction = performance.now(); if (this.autoDriver) this.autoDriver.forceStop(); };\r\n//           this.autoDriver = new AutoDriver(Mouse, this, { enabled: props.autoDemo, speed: props.autoSpeed, resumeDelay: props.autoResumeDelay, rampDuration: props.autoRampDuration });\r\n//           this.init();\r\n//           this._loop = this.loop.bind(this);\r\n//           this._resize = this.resize.bind(this);\r\n//           window.addEventListener('resize', this._resize);\r\n//           this._onVisibility = () => {\r\n//             const hidden = document.hidden;\r\n//             if (hidden) { this.pause(); } else if (isVisibleRef.current) { this.start(); }\r\n//           };\r\n//           document.addEventListener('visibilitychange', this._onVisibility);\r\n//           this.running = false;\r\n//         }\r\n//         init() {\r\n//           this.props.$wrapper.prepend(Common.renderer.domElement);\r\n//           // create a tiny simulation that uses paletteTex and bgVec4\r\n//           this.scene = new THREE.Scene();\r\n//           this.camera = new THREE.Camera();\r\n//           this.outputMesh = new THREE.Mesh(\r\n//             new THREE.PlaneGeometry(2, 2),\r\n//             new THREE.RawShaderMaterial({\r\n//               vertexShader: face_vert,\r\n//               fragmentShader: color_frag,\r\n//               transparent: true,\r\n//               depthWrite: false,\r\n//               uniforms: {\r\n//                 velocity: { value: null },\r\n//                 boundarySpace: { value: new THREE.Vector2() },\r\n//                 palette: { value: paletteTex },\r\n//                 bgColor: { value: bgVec4 }\r\n//               }\r\n//             })\r\n//           );\r\n//           this.scene.add(this.outputMesh);\r\n//         }\r\n//         resize() { Common.resize(); }\r\n//         render() {\r\n//           Common.update();\r\n//           Common.renderer.setRenderTarget(null);\r\n//           Common.renderer.render(this.scene, this.camera);\r\n//         }\r\n//         loop() {\r\n//           if (!this.running) return;\r\n//           // update minimal state:\r\n//           Mouse.update();\r\n//           Common.update();\r\n//           this.render();\r\n//           rafRef.current = requestAnimationFrame(this._loop);\r\n//         }\r\n//         start() { if (this.running) return; this.running = true; this._loop(); }\r\n//         pause() { this.running = false; if (rafRef.current) { cancelAnimationFrame(rafRef.current); rafRef.current = null; } }\r\n//         dispose() {\r\n//           try {\r\n//             window.removeEventListener('resize', this._resize);\r\n//             document.removeEventListener('visibilitychange', this._onVisibility);\r\n//             Mouse.dispose();\r\n//             if (Common.renderer) {\r\n//               const canvas = Common.renderer.domElement;\r\n//               if (canvas && canvas.parentNode) canvas.parentNode.removeChild(canvas);\r\n//               Common.renderer.dispose();\r\n//             }\r\n//           } catch (e) { /* ignore */ }\r\n//         }\r\n//       }\r\n\r\n//       const container = mountRef.current;\r\n//       container.style.position = container.style.position || 'relative';\r\n//       container.style.overflow = container.style.overflow || 'hidden';\r\n\r\n//       const webgl = new WebGLManager({ $wrapper: container, autoDemo, autoSpeed, autoIntensity, takeoverDuration, autoResumeDelay, autoRampDuration });\r\n//       webglRef.current = webgl;\r\n\r\n//       // resize observer\r\n//       const ro = new ResizeObserver(() => {\r\n//         if (!webglRef.current) return;\r\n//         if (resizeRafRef.current) cancelAnimationFrame(resizeRafRef.current);\r\n//         resizeRafRef.current = requestAnimationFrame(() => {\r\n//           if (!webglRef.current) return;\r\n//           webglRef.current.resize();\r\n//         });\r\n//       });\r\n//       ro.observe(container);\r\n//       resizeObserverRef.current = ro;\r\n\r\n//       // intersection observer to pause when offscreen\r\n//       const io = new IntersectionObserver(entries => {\r\n//         const entry = entries[0];\r\n//         const isVisible = entry.isIntersecting && entry.intersectionRatio > 0;\r\n//         isVisibleRef.current = isVisible;\r\n//         if (!webglRef.current) return;\r\n//         if (isVisible && !document.hidden) { webglRef.current.start(); } else { webglRef.current.pause(); }\r\n//       }, { threshold: [0, 0.01, 0.1] });\r\n//       io.observe(container);\r\n//       intersectionObserverRef.current = io;\r\n\r\n//       // start after init\r\n//       webgl.start();\r\n//     };\r\n\r\n//     // prefer requestIdleCallback to avoid blocking first paint\r\n//     if ('requestIdleCallback' in window) {\r\n//       idleId = window.requestIdleCallback(() => initWebgl(), { timeout: 300 });\r\n//     } else {\r\n//       idleId = setTimeout(initWebgl, 200);\r\n//     }\r\n\r\n//     // cleanup\r\n//     return () => {\r\n//       canceled = true;\r\n//       if (idleId) {\r\n//         if ('cancelIdleCallback' in window) window.cancelIdleCallback?.(idleId);\r\n//         else clearTimeout(idleId);\r\n//       }\r\n//       if (rafRef.current) cancelAnimationFrame(rafRef.current);\r\n//       if (resizeObserverRef.current) {\r\n//         try { resizeObserverRef.current.disconnect(); } catch (e) {}\r\n//       }\r\n//       if (intersectionObserverRef.current) {\r\n//         try { intersectionObserverRef.current.disconnect(); } catch (e) {}\r\n//       }\r\n//       if (webglRef.current) {\r\n//         try { webglRef.current.dispose(); } catch (e) {}\r\n//       }\r\n//       webglRef.current = null;\r\n//     };\r\n//     // NOTE: this effect runs once on mount; don't re-create on prop changes\r\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n//   }, []); // run once\r\n\r\n//   // apply options when props change (no heavy re-initialization)\r\n//   useEffect(() => {\r\n//     const webgl = webglRef.current;\r\n//     if (!webgl) return;\r\n//     // if your real implementation exposes simulation options, update them here:\r\n//     try {\r\n//       if (webgl.autoDriver) {\r\n//         webgl.autoDriver.enabled = autoDemo;\r\n//         webgl.autoDriver.speed = autoSpeed;\r\n//         webgl.autoDriver.resumeDelay = autoResumeDelay;\r\n//         webgl.autoDriver.rampDurationMs = autoRampDuration * 1000;\r\n//         if (webgl.autoDriver.mouse) {\r\n//           webgl.autoDriver.mouse.autoIntensity = autoIntensity;\r\n//           webgl.autoDriver.mouse.takeoverDuration = takeoverDuration;\r\n//         }\r\n//       }\r\n//       // if you have sim.options, assign them:\r\n//       if (webgl.output && webgl.output.simulation && webgl.output.simulation.options) {\r\n//         Object.assign(webgl.output.simulation.options, {\r\n//           mouse_force: mouseForce,\r\n//           cursor_size: cursorSize,\r\n//           isViscous,\r\n//           viscous,\r\n//           iterations_viscous: iterationsViscous,\r\n//           iterations_poisson: iterationsPoisson,\r\n//           dt,\r\n//           BFECC,\r\n//           resolution,\r\n//           isBounce\r\n//         });\r\n//         // if resolution changed, ask simulation to resize\r\n//         if (webgl.output.simulation.resize) webgl.output.simulation.resize();\r\n//       }\r\n//     } catch (e) {\r\n//       // ignore, best-effort\r\n//     }\r\n//   }, [mouseForce, cursorSize, isViscous, viscous, iterationsViscous, iterationsPoisson, dt, BFECC, resolution, isBounce, autoDemo, autoSpeed, autoIntensity, takeoverDuration, autoResumeDelay, autoRampDuration]);\r\n\r\n//   return <div ref={mountRef} className={`${styles.liquidEtherContainer || ''} ${className || ''}`} style={style} />;\r\n// }\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2094, "column": 0}, "map": {"version":3,"sources":["file:///D:/FYP/Fyp%20cursor/frontend/lib/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:5000/api\", // Your backend URL\r\n});\r\n\r\nexport default api;\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,MAAM,wJAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;uCAEe","debugId":null}},
    {"offset": {"line": 2111, "column": 0}, "map": {"version":3,"sources":["file:///D:/FYP/Fyp%20cursor/frontend/lib/auth.js"],"sourcesContent":["// export const setToken = (token) => {\r\n//   localStorage.setItem(\"token\", token);\r\n// };\r\n\r\n// export const getToken = () => {\r\n//   return localStorage.getItem(\"token\");\r\n// };\r\n\r\n// export const removeToken = () => {\r\n//   localStorage.removeItem(\"token\");\r\n// };\r\n\r\n// export const isLoggedIn = () => {\r\n//   return !!getToken();\r\n// };\r\n\r\n\r\n\r\n\r\nexport const setToken = (token) => {\r\n  localStorage.setItem(\"token\", token);\r\n};\r\n\r\nexport const getToken = () => {\r\n  return localStorage.getItem(\"token\");\r\n};\r\n\r\nexport const removeToken = () => {\r\n  localStorage.removeItem(\"token\");\r\n};\r\n\r\nexport const isLoggedIn = () => !!getToken();\r\n"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,0CAA0C;AAC1C,KAAK;AAEL,kCAAkC;AAClC,0CAA0C;AAC1C,KAAK;AAEL,qCAAqC;AACrC,sCAAsC;AACtC,KAAK;AAEL,oCAAoC;AACpC,yBAAyB;AACzB,KAAK;;;;;;;;;;;AAKE,MAAM,WAAW,CAAC;IACvB,aAAa,OAAO,CAAC,SAAS;AAChC;AAEO,MAAM,WAAW;IACtB,OAAO,aAAa,OAAO,CAAC;AAC9B;AAEO,MAAM,cAAc;IACzB,aAAa,UAAU,CAAC;AAC1B;AAEO,MAAM,aAAa,IAAM,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 2150, "column": 0}, "map": {"version":3,"sources":["file:///D:/FYP/Fyp%20cursor/frontend/pages/dashboard.js"],"sourcesContent":["\n// // pages/dashboard.js\n// import dynamic from 'next/dynamic';\n\n// import Layout from '../components/Layout';\n// import LiquidEther from '../components/LiquidEther';\n// import { useAuth } from '../context/AuthContext';\n// import { useRouter } from 'next/router';\n// import { useEffect, useState } from 'react';\n// import api from '../lib/api';\n// import { getToken } from '../lib/auth';\n\n// export default function Dashboard() {\n//   const { isLoggedIn, loading: authLoading } = useAuth();\n//   const router = useRouter();\n//   const [userData, setUserData] = useState(null);\n//   const [chatStats, setChatStats] = useState({ total: 0, today: 0 });\n//   const [recentChats, setRecentChats] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     if (!authLoading && !isLoggedIn) router.push('/login');\n//   }, [authLoading, isLoggedIn, router]);\n\n//   useEffect(() => {\n//     if (isLoggedIn) {\n//       fetchDashboardData();\n//     }\n//   }, [isLoggedIn]);\n\n//   const fetchDashboardData = async () => {\n//     try {\n//       const token = getToken();\n//       const headers = { Authorization: `Bearer ${token}` };\n      \n//       // Fetch user stats (includes user data and chat stats)\n//       const statsRes = await api.get('/user/stats', { headers });\n//       setUserData(statsRes.data.user);\n//       setChatStats({\n//         total: statsRes.data.totalChats,\n//         today: statsRes.data.todayChats\n//       }); \n      \n//       // Fetch recent chats separately\n//       const chatsRes = await api.get('/chats', { headers });\n//       setRecentChats(chatsRes.data.slice(0, 5));\n      \n//     } catch (error) {\n//       console.error('Failed to fetch dashboard data:', error);\n//       // Fallback data if API fails\n//       setUserData({ username: 'Guest', email: 'guest@example.com', createdAt: new Date() });\n//       setChatStats({ total: 0, today: 0 });\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   if (authLoading || !isLoggedIn) {\n//     return (\n//       <Layout>\n//         <div className=\"flex-1 grid place-items-center\">\n//           <p className=\"text-gray-400\">Loading...</p>\n//         </div>\n//       </Layout>\n//     );\n//   }\n\n//   if (loading) {\n//   return (\n//     <Layout>\n//         <div className=\"flex-1 grid place-items-center\">\n//           <div className=\"text-center\">\n//             <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-emerald-500 mx-auto mb-2\"></div>\n//             <p className=\"text-gray-400\">Loading dashboard...</p>\n//           </div>\n//         </div>\n//       </Layout>\n//     );\n//   }\n\n//   const demoLinks = [\n//     { title: 'Start a new chat', href: '/chat' },\n//     { title: 'See information', href: '/info' },\n//     { title: 'DLIMS status', href: '/chat' },\n//     { title: 'NADRA services', href: '/chat' },\n//   ];\n\n//   return (\n//     <Layout>\n//       <div className=\"relative\">\n//         {/* Liquid Ether background */}\n//         <div className=\"absolute inset-0 -z-0\">\n//           <LiquidEther\n//             colors={[ '#0EA5A3', '#10B981', '#065F46' ]}\n//             mouseForce={20}\n//             cursorSize={100}\n//             isViscous={false}\n//             viscous={30}\n//             iterationsViscous={32}\n//             iterationsPoisson={32}\n//             resolution={0.6}\n//             isBounce={false}\n//             autoDemo={true}\n//             autoSpeed={0.5}\n//             autoIntensity={2.2}\n//             takeoverDuration={0.25}\n//             autoResumeDelay={3000}\n//             autoRampDuration={0.6}\n//             style={{ width:'100%', height:'100%' }}\n//           />\n//         </div>\n\n//         <div className=\"relative z-10 mx-auto max-w-6xl px-4 py-8 space-y-8\">\n//         {/* Welcome Section */}\n//         <section>\n//           <h1 className=\"text-2xl md:text-3xl font-bold text-gray-100\">\n//             Welcome back, {userData?.username || 'Guest'}!\n//           </h1>\n//           <p className=\"mt-1 text-gray-400\">Here's your personalized dashboard with insights and quick access.</p>\n//         </section>\n\n//         {/* Stats Cards */}\n//         <section className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n//           <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n//             <h3 className=\"text-lg font-semibold text-gray-100\">Total Chats</h3>\n//             <p className=\"mt-2 text-2xl font-bold text-emerald-400\">{chatStats.total}</p>\n//           </div>\n          \n//           <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n//             <h3 className=\"text-lg font-semibold text-gray-100\">Today's Chats</h3>\n//             <p className=\"mt-2 text-2xl font-bold text-emerald-400\">{chatStats.today}</p>\n//           </div>\n          \n//           <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n//             <h3 className=\"text-lg font-semibold text-gray-100\">Account Status</h3>\n//             <p className=\"mt-2 text-sm text-emerald-400\">✓ Active</p>\n//           </div>\n          \n//           <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n//             <h3 className=\"text-lg font-semibold text-gray-100\">Member Since</h3>\n//             <p className=\"mt-2 text-sm text-gray-400\">\n//               {userData?.createdAt ? new Date(userData.createdAt).toLocaleDateString() : '2025'}\n//             </p>\n//           </div>\n//         </section>\n\n//         {/* Profile & Usage Section */}\n//         <section className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-3\">\n//           <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n//             <h3 className=\"text-lg font-semibold text-gray-100\">Your Profile</h3>\n//             <dl className=\"mt-3 space-y-1 text-sm text-gray-400\">\n//               <div className=\"flex justify-between\"><dt>Username</dt><dd className=\"text-gray-200\">{userData?.username || 'Guest'}</dd></div>\n//               <div className=\"flex justify-between\"><dt>Email</dt><dd className=\"text-gray-200\">{userData?.email || 'guest@example.com'}</dd></div>\n//               <div className=\"flex justify-between\"><dt>Status</dt><dd className=\"text-emerald-400\">Online</dd></div>\n//             </dl>\n//           </div>\n\n//           <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n//             <h3 className=\"text-lg font-semibold text-gray-100\">Usage Insights</h3>\n//             <p className=\"mt-2 text-sm text-gray-400\">\n//               {chatStats.today > 0 \n//                 ? `You've been active today with ${chatStats.today} chat${chatStats.today > 1 ? 's' : ''}.`\n//                 : 'Start your first chat today to get personalized insights.'\n//               }\n//             </p>\n//             {chatStats.total > 0 && (\n//               <p className=\"mt-2 text-xs text-gray-500\">\n//                 Average: {Math.round(chatStats.total / Math.max(1, Math.floor((Date.now() - new Date(userData?.createdAt || Date.now()).getTime()) / (1000 * 60 * 60 * 24))))} chats/day\n//               </p>\n//             )}\n//           </div>\n\n//           <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n//             <h3 className=\"text-lg font-semibold text-gray-100\">Tips & Tricks</h3>\n//             <ul className=\"mt-2 list-disc pl-5 text-sm text-gray-400\">\n//               <li>Ask in Urdu or English</li>\n//               <li>Prefix with department: \"NADRA: family registration\"</li>\n//               <li>Use specific keywords for better results</li>\n//             </ul>\n//           </div>\n//         </section>\n\n//         {/* Recent Activity */}\n//         {recentChats.length > 0 && (\n//           <section>\n//             <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Recent Activity</h2>\n//             <div className=\"space-y-3\">\n//               {recentChats.map((chat, index) => (\n//                 <div key={chat._id || index} className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4\">\n//                   <div className=\"flex justify-between items-start\">\n//                     <div>\n//                       <h4 className=\"text-sm font-medium text-gray-100\">{chat.title}</h4>\n//                       <p className=\"text-xs text-gray-500 mt-1\">{chat.lastMessage?.slice(0, 60) || 'No messages yet'}...</p>\n//                     </div>\n//                     <span className=\"text-xs text-gray-600\">\n//                       {new Date(chat.updatedAt).toLocaleDateString()}\n//                     </span>\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           </section>\n//         )}\n\n//         {/* Government Services Overview */}\n//         <section>\n//           <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Government Services</h2>\n//           <div className=\"grid gap-3 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\n//             {['DLIMS', 'NADRA', 'DGIP', 'Zameen', 'ECP', 'FBR', 'SECP', 'PSP'].map((service) => (\n//               <div key={service} className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4 text-center\">\n//                 <h4 className=\"text-sm font-medium text-gray-100\">{service}</h4>\n//                 <p className=\"text-xs text-gray-500 mt-1\">Government Service</p>\n//                 <a href=\"/chat\" className=\"text-xs text-emerald-400 hover:text-emerald-300 mt-2 inline-block\">\n//                   Ask about {service} →\n//                 </a>\n//               </div>\n//             ))}\n//           </div>\n//         </section>\n\n//         {/* Quick Actions */}\n//         <section>\n//           <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Quick Actions</h2>\n//           <div className=\"grid gap-3 sm:grid-cols-2 md:grid-cols-3\">\n//             {demoLinks.map(link => (\n//               <a key={link.title} href={link.href} className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4 text-sm text-gray-300 hover:border-emerald-800 hover:text-white transition-colors\">\n//                 {link.title}\n//               </a>\n//             ))}\n//           </div>\n//         </section>\n\n//         {/* News & Updates */}\n//         <section>\n//           <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Latest Updates</h2>\n//           <div className=\"space-y-3\">\n//             <div className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4\">\n//               <h4 className=\"text-sm font-medium text-gray-100\">New DLIMS Features</h4>\n//               <p className=\"text-xs text-gray-400 mt-1\">Updated information about DLIMS services and requirements.</p>\n//               <span className=\"text-xs text-gray-600\">2 days ago</span>\n//             </div>\n//             <div className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4\">\n//               <h4 className=\"text-sm font-medium text-gray-100\">NADRA Process Updates</h4>\n//               <p className=\"text-xs text-gray-400 mt-1\">Streamlined procedures for CNIC applications.</p>\n//               <span className=\"text-xs text-gray-600\">1 week ago</span>\n//             </div>\n//             <div className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4\">\n//               <h4 className=\"text-sm font-medium text-gray-100\">System Maintenance</h4>\n//               <p className=\"text-xs text-gray-400 mt-1\">Scheduled maintenance completed successfully.</p>\n//               <span className=\"text-xs text-gray-600\">2 weeks ago</span>\n//             </div>\n//         </div>\n//         </section>\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n\n\n// pages/dashboard.js\nimport Layout from '../components/Layout';\nimport LiquidEther from '../components/LiquidEther';\nimport { useAuth } from '../context/AuthContext';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport api from '../lib/api';\nimport { getToken } from '../lib/auth';\n\nexport default function Dashboard() {\n  const { isLoggedIn, loading: authLoading } = useAuth();\n  const router = useRouter();\n\n  const [userData, setUserData] = useState(null);\n  const [chatStats, setChatStats] = useState({ total: 0, today: 0 });\n  const [recentChats, setRecentChats] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!authLoading && !isLoggedIn) router.push('/login');\n  }, [authLoading, isLoggedIn, router]);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      fetchDashboardData();\n    }\n  }, [isLoggedIn]);\n\n  const fetchDashboardData = async () => {\n    try {\n      const token = getToken();\n      const headers = { Authorization: `Bearer ${token}` };\n\n      // Fetch user stats (includes user data and chat stats)\n      const statsRes = await api.get('/user/stats', { headers });\n      setUserData(statsRes.data.user);\n      setChatStats({\n        total: statsRes.data.totalChats,\n        today: statsRes.data.todayChats,\n      });\n\n      // Fetch recent chats separately\n      const chatsRes = await api.get('/chats', { headers });\n      setRecentChats(chatsRes.data.slice(0, 5));\n    } catch (error) {\n      console.error('Failed to fetch dashboard data:', error);\n\n      // Fallback data if API fails\n      setUserData({\n        username: 'Guest',\n        email: 'guest@example.com',\n        createdAt: new Date(),\n      });\n      setChatStats({ total: 0, today: 0 });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (authLoading || !isLoggedIn) {\n    return (\n      <Layout>\n        <div className=\"flex-1 grid place-items-center\">\n          <p className=\"text-gray-400\">Loading...</p>\n        </div>\n      </Layout>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Layout>\n        <div className=\"flex-1 grid place-items-center\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-emerald-500 mx-auto mb-2\"></div>\n            <p className=\"text-gray-400\">Loading dashboard...</p>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  const demoLinks = [\n    { title: 'Start a new chat', href: '/chat' },\n    { title: 'See information', href: '/info' },\n    { title: 'DLIMS status', href: '/chat' },\n    { title: 'NADRA services', href: '/chat' },\n  ];\n\n  return (\n    <Layout>\n      <div className=\"relative\">\n        {/* Liquid Ether background */}\n        <div className=\"absolute inset-0 -z-0\">\n          <LiquidEther\n            colors={['#0EA5A3', '#10B981', '#065F46']}\n            mouseForce={20}\n            cursorSize={100}\n            isViscous={false}\n            viscous={30}\n            iterationsViscous={32}\n            iterationsPoisson={32}\n            resolution={0.6}\n            isBounce={false}\n            autoDemo={true}\n            autoSpeed={0.5}\n            autoIntensity={2.2}\n            takeoverDuration={0.25}\n            autoResumeDelay={3000}\n            autoRampDuration={0.6}\n            style={{ width: '100%', height: '100%' }}\n          />\n        </div>\n\n        <div className=\"relative z-10 mx-auto max-w-6xl px-4 py-8 space-y-8\">\n          {/* Welcome Section */}\n          <section>\n            <h1 className=\"text-2xl md:text-3xl font-bold text-gray-100\">\n              Welcome back, {userData?.username || 'Guest'}!\n            </h1>\n            <p className=\"mt-1 text-gray-400\">\n              Here's your personalized dashboard with insights and quick access.\n            </p>\n          </section>\n\n          {/* Stats Cards */}\n          <section className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n            <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n              <h3 className=\"text-lg font-semibold text-gray-100\">Total Chats</h3>\n              <p className=\"mt-2 text-2xl font-bold text-emerald-400\">\n                {chatStats.total}\n              </p>\n            </div>\n            <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n              <h3 className=\"text-lg font-semibold text-gray-100\">Today's Chats</h3>\n              <p className=\"mt-2 text-2xl font-bold text-emerald-400\">\n                {chatStats.today}\n              </p>\n            </div>\n            <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n              <h3 className=\"text-lg font-semibold text-gray-100\">Account Status</h3>\n              <p className=\"mt-2 text-sm text-emerald-400\">✓ Active</p>\n            </div>\n            <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n              <h3 className=\"text-lg font-semibold text-gray-100\">Member Since</h3>\n              <p className=\"mt-2 text-sm text-gray-400\">\n                {userData?.createdAt\n                  ? new Date(userData.createdAt).toLocaleDateString()\n                  : '2025'}\n              </p>\n            </div>\n          </section>\n\n          {/* Profile & Usage Section */}\n          <section className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-3\">\n            <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n              <h3 className=\"text-lg font-semibold text-gray-100\">Your Profile</h3>\n              <dl className=\"mt-3 space-y-1 text-sm text-gray-400\">\n                <div className=\"flex justify-between\">\n                  <dt>Username</dt>\n                  <dd className=\"text-gray-200\">\n                    {userData?.username || 'Guest'}\n                  </dd>\n                </div>\n                <div className=\"flex justify-between\">\n                  <dt>Email</dt>\n                  <dd className=\"text-gray-200\">\n                    {userData?.email || 'guest@example.com'}\n                  </dd>\n                </div>\n                <div className=\"flex justify-between\">\n                  <dt>Status</dt>\n                  <dd className=\"text-emerald-400\">Online</dd>\n                </div>\n              </dl>\n            </div>\n\n            <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n              <h3 className=\"text-lg font-semibold text-gray-100\">Usage Insights</h3>\n              <p className=\"mt-2 text-sm text-gray-400\">\n                {chatStats.today > 0\n                  ? `You've been active today with ${chatStats.today} chat${\n                      chatStats.today > 1 ? 's' : ''\n                    }.`\n                  : 'Start your first chat today to get personalized insights.'}\n              </p>\n\n              {chatStats.total > 0 && (\n                <p className=\"mt-2 text-xs text-gray-500\">\n                  Average:{' '}\n                  {Math.round(\n                    chatStats.total /\n                      Math.max(\n                        1,\n                        Math.floor(\n                          (Date.now() -\n                            new Date(\n                              userData?.createdAt || Date.now()\n                            ).getTime()) /\n                            (1000 * 60 * 60 * 24)\n                        )\n                      )\n                  )}{' '}\n                  chats/day\n                </p>\n              )}\n            </div>\n\n            <div className=\"rounded-2xl border border-emerald-900/40 bg-gray-900/60 p-5\">\n              <h3 className=\"text-lg font-semibold text-gray-100\">Tips & Tricks</h3>\n              <ul className=\"mt-2 list-disc pl-5 text-sm text-gray-400\">\n                <li>Ask in Urdu or English</li>\n                <li>Prefix with department: \"NADRA: family registration\"</li>\n                <li>Use specific keywords for better results</li>\n              </ul>\n            </div>\n          </section>\n\n          {/* Recent Activity */}\n          {recentChats.length > 0 && (\n            <section>\n              <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">\n                Recent Activity\n              </h2>\n              <div className=\"space-y-3\">\n                {recentChats.map((chat, index) => (\n                  <div\n                    key={chat._id || index}\n                    className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4\"\n                  >\n                    <div className=\"flex justify-between items-start\">\n                      <div>\n                        <h4 className=\"text-sm font-medium text-gray-100\">\n                          {chat.title}\n                        </h4>\n                        <p className=\"text-xs text-gray-500 mt-1\">\n                          {chat.lastMessage?.slice(0, 60) || 'No messages yet'}...\n                        </p>\n                      </div>\n                      <span className=\"text-xs text-gray-600\">\n                        {new Date(chat.updatedAt).toLocaleDateString()}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </section>\n          )}\n\n          {/* Government Services Overview */}\n          <section>\n            <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">\n              Government Services\n            </h2>\n            <div className=\"grid gap-3 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\n              {[\n                'DLIMS',\n                'NADRA',\n                'DGIP',\n                'Zameen',\n                'ECP',\n                'FBR',\n                'SECP',\n                'PSP',\n              ].map((service) => (\n                <div\n                  key={service}\n                  className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4 text-center\"\n                >\n                  <h4 className=\"text-sm font-medium text-gray-100\">{service}</h4>\n                  <p className=\"text-xs text-gray-500 mt-1\">Government Service</p>\n                  <a\n                    href=\"/chat\"\n                    className=\"text-xs text-emerald-400 hover:text-emerald-300 mt-2 inline-block\"\n                  >\n                    Ask about {service} →\n                  </a>\n                </div>\n              ))}\n            </div>\n          </section>\n\n          {/* Quick Actions */}\n          <section>\n            <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">\n              Quick Actions\n            </h2>\n            <div className=\"grid gap-3 sm:grid-cols-2 md:grid-cols-3\">\n              {demoLinks.map((link) => (\n                <a\n                  key={link.title}\n                  href={link.href}\n                  className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4 text-sm text-gray-300 hover:border-emerald-800 hover:text-white transition-colors\"\n                >\n                  {link.title}\n                </a>\n              ))}\n            </div>\n          </section>\n\n          {/* News & Updates */}\n          <section>\n            <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">\n              Latest Updates\n            </h2>\n            <div className=\"space-y-3\">\n              <div className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4\">\n                <h4 className=\"text-sm font-medium text-gray-100\">\n                  New DLIMS Features\n                </h4>\n                <p className=\"text-xs text-gray-400 mt-1\">\n                  Updated information about DLIMS services and requirements.\n                </p>\n                <span className=\"text-xs text-gray-600\">2 days ago</span>\n              </div>\n\n              <div className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4\">\n                <h4 className=\"text-sm font-medium text-gray-100\">\n                  NADRA Process Updates\n                </h4>\n                <p className=\"text-xs text-gray-400 mt-1\">\n                  Streamlined procedures for CNIC applications.\n                </p>\n                <span className=\"text-xs text-gray-600\">1 week ago</span>\n              </div>\n\n              <div className=\"rounded-xl border border-emerald-900/40 bg-gray-900/60 p-4\">\n                <h4 className=\"text-sm font-medium text-gray-100\">\n                  System Maintenance\n                </h4>\n                <p className=\"text-xs text-gray-400 mt-1\">\n                  Scheduled maintenance completed successfully.\n                </p>\n                <span className=\"text-xs text-gray-600\">2 weeks ago</span>\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n"],"names":[],"mappings":"AACA,wBAAwB;AACxB,sCAAsC;AAEtC,6CAA6C;AAC7C,uDAAuD;AACvD,oDAAoD;AACpD,2CAA2C;AAC3C,+CAA+C;AAC/C,gCAAgC;AAChC,0CAA0C;AAE1C,wCAAwC;AACxC,4DAA4D;AAC5D,gCAAgC;AAChC,oDAAoD;AACpD,wEAAwE;AACxE,wDAAwD;AACxD,kDAAkD;AAElD,sBAAsB;AACtB,8DAA8D;AAC9D,2CAA2C;AAE3C,sBAAsB;AACtB,wBAAwB;AACxB,8BAA8B;AAC9B,QAAQ;AACR,sBAAsB;AAEtB,6CAA6C;AAC7C,YAAY;AACZ,kCAAkC;AAClC,8DAA8D;AAE9D,gEAAgE;AAChE,oEAAoE;AACpE,yCAAyC;AACzC,uBAAuB;AACvB,2CAA2C;AAC3C,0CAA0C;AAC1C,aAAa;AAEb,yCAAyC;AACzC,+DAA+D;AAC/D,mDAAmD;AAEnD,wBAAwB;AACxB,iEAAiE;AACjE,sCAAsC;AACtC,+FAA+F;AAC/F,8CAA8C;AAC9C,kBAAkB;AAClB,2BAA2B;AAC3B,QAAQ;AACR,OAAO;AAEP,sCAAsC;AACtC,eAAe;AACf,iBAAiB;AACjB,2DAA2D;AAC3D,wDAAwD;AACxD,iBAAiB;AACjB,kBAAkB;AAClB,SAAS;AACT,MAAM;AAEN,mBAAmB;AACnB,aAAa;AACb,eAAe;AACf,2DAA2D;AAC3D,0CAA0C;AAC1C,mHAAmH;AACnH,oEAAoE;AACpE,mBAAmB;AACnB,iBAAiB;AACjB,kBAAkB;AAClB,SAAS;AACT,MAAM;AAEN,wBAAwB;AACxB,oDAAoD;AACpD,mDAAmD;AACnD,gDAAgD;AAChD,kDAAkD;AAClD,OAAO;AAEP,aAAa;AACb,eAAe;AACf,mCAAmC;AACnC,0CAA0C;AAC1C,kDAAkD;AAClD,yBAAyB;AACzB,2DAA2D;AAC3D,8BAA8B;AAC9B,+BAA+B;AAC/B,gCAAgC;AAChC,2BAA2B;AAC3B,qCAAqC;AACrC,qCAAqC;AACrC,+BAA+B;AAC/B,+BAA+B;AAC/B,8BAA8B;AAC9B,8BAA8B;AAC9B,kCAAkC;AAClC,sCAAsC;AACtC,qCAAqC;AACrC,qCAAqC;AACrC,sDAAsD;AACtD,eAAe;AACf,iBAAiB;AAEjB,gFAAgF;AAChF,kCAAkC;AAClC,oBAAoB;AACpB,0EAA0E;AAC1E,6DAA6D;AAC7D,kBAAkB;AAClB,qHAAqH;AACrH,qBAAqB;AAErB,8BAA8B;AAC9B,yEAAyE;AACzE,0FAA0F;AAC1F,mFAAmF;AACnF,4FAA4F;AAC5F,mBAAmB;AAEnB,0FAA0F;AAC1F,qFAAqF;AACrF,4FAA4F;AAC5F,mBAAmB;AAEnB,0FAA0F;AAC1F,sFAAsF;AACtF,wEAAwE;AACxE,mBAAmB;AAEnB,0FAA0F;AAC1F,oFAAoF;AACpF,yDAAyD;AACzD,mGAAmG;AACnG,mBAAmB;AACnB,mBAAmB;AACnB,qBAAqB;AAErB,0CAA0C;AAC1C,yEAAyE;AACzE,0FAA0F;AAC1F,oFAAoF;AACpF,oEAAoE;AACpE,gJAAgJ;AAChJ,sJAAsJ;AACtJ,wHAAwH;AACxH,oBAAoB;AACpB,mBAAmB;AAEnB,0FAA0F;AAC1F,sFAAsF;AACtF,yDAAyD;AACzD,sCAAsC;AACtC,8GAA8G;AAC9G,gFAAgF;AAChF,kBAAkB;AAClB,mBAAmB;AACnB,wCAAwC;AACxC,2DAA2D;AAC3D,2LAA2L;AAC3L,qBAAqB;AACrB,iBAAiB;AACjB,mBAAmB;AAEnB,0FAA0F;AAC1F,qFAAqF;AACrF,yEAAyE;AACzE,gDAAgD;AAChD,8EAA8E;AAC9E,kEAAkE;AAClE,oBAAoB;AACpB,mBAAmB;AACnB,qBAAqB;AAErB,kCAAkC;AAClC,uCAAuC;AACvC,sBAAsB;AACtB,4FAA4F;AAC5F,0CAA0C;AAC1C,oDAAoD;AACpD,uHAAuH;AACvH,uEAAuE;AACvE,4BAA4B;AAC5B,4FAA4F;AAC5F,+HAA+H;AAC/H,6BAA6B;AAC7B,+DAA+D;AAC/D,wEAAwE;AACxE,8BAA8B;AAC9B,2BAA2B;AAC3B,yBAAyB;AACzB,oBAAoB;AACpB,qBAAqB;AACrB,uBAAuB;AACvB,aAAa;AAEb,+CAA+C;AAC/C,oBAAoB;AACpB,8FAA8F;AAC9F,sFAAsF;AACtF,oGAAoG;AACpG,uHAAuH;AACvH,mFAAmF;AACnF,mFAAmF;AACnF,iHAAiH;AACjH,0CAA0C;AAC1C,uBAAuB;AACvB,uBAAuB;AACvB,kBAAkB;AAClB,mBAAmB;AACnB,qBAAqB;AAErB,gCAAgC;AAChC,oBAAoB;AACpB,wFAAwF;AACxF,uEAAuE;AACvE,uCAAuC;AACvC,+MAA+M;AAC/M,+BAA+B;AAC/B,qBAAqB;AACrB,kBAAkB;AAClB,mBAAmB;AACnB,qBAAqB;AAErB,iCAAiC;AACjC,oBAAoB;AACpB,yFAAyF;AACzF,wCAAwC;AACxC,2FAA2F;AAC3F,0FAA0F;AAC1F,yHAAyH;AACzH,0EAA0E;AAC1E,qBAAqB;AACrB,2FAA2F;AAC3F,6FAA6F;AAC7F,4GAA4G;AAC5G,0EAA0E;AAC1E,qBAAqB;AACrB,2FAA2F;AAC3F,0FAA0F;AAC1F,4GAA4G;AAC5G,2EAA2E;AAC3E,qBAAqB;AACrB,iBAAiB;AACjB,qBAAqB;AACrB,iBAAiB;AACjB,eAAe;AACf,gBAAgB;AAChB,OAAO;AACP,IAAI;AAGJ,qBAAqB;;;;;;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEe,SAAS;;IACtB,MAAM,EAAE,UAAU,EAAE,SAAS,WAAW,EAAE,GAAG,IAAA,yIAAO;IACpD,MAAM,SAAS,IAAA,mJAAS;IAExB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,kJAAQ,EAAC;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,kJAAQ,EAAC;QAAE,OAAO;QAAG,OAAO;IAAE;IAChE,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,kJAAQ,EAAC,EAAE;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,kJAAQ,EAAC;IAEvC,IAAA,mJAAS;+BAAC;YACR,IAAI,CAAC,eAAe,CAAC,YAAY,OAAO,IAAI,CAAC;QAC/C;8BAAG;QAAC;QAAa;QAAY;KAAO;IAEpC,IAAA,mJAAS;+BAAC;YACR,IAAI,YAAY;gBACd;YACF;QACF;8BAAG;QAAC;KAAW;IAEf,MAAM,qBAAqB;QACzB,IAAI;YACF,MAAM,QAAQ,IAAA,+HAAQ;YACtB,MAAM,UAAU;gBAAE,eAAe,AAAC,UAAe,OAAN;YAAQ;YAEnD,uDAAuD;YACvD,MAAM,WAAW,MAAM,6HAAG,CAAC,GAAG,CAAC,eAAe;gBAAE;YAAQ;YACxD,YAAY,SAAS,IAAI,CAAC,IAAI;YAC9B,aAAa;gBACX,OAAO,SAAS,IAAI,CAAC,UAAU;gBAC/B,OAAO,SAAS,IAAI,CAAC,UAAU;YACjC;YAEA,gCAAgC;YAChC,MAAM,WAAW,MAAM,6HAAG,CAAC,GAAG,CAAC,UAAU;gBAAE;YAAQ;YACnD,eAAe,SAAS,IAAI,CAAC,KAAK,CAAC,GAAG;QACxC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mCAAmC;YAEjD,6BAA6B;YAC7B,YAAY;gBACV,UAAU;gBACV,OAAO;gBACP,WAAW,IAAI;YACjB;YACA,aAAa;gBAAE,OAAO;gBAAG,OAAO;YAAE;QACpC,SAAU;YACR,WAAW;QACb;IACF;IAEA,IAAI,eAAe,CAAC,YAAY;QAC9B,qBACE,sKAAC,uIAAM;sBACL,cAAA,sKAAC;gBAAI,WAAU;0BACb,cAAA,sKAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;;;;;;;IAIrC;IAEA,IAAI,SAAS;QACX,qBACE,sKAAC,uIAAM;sBACL,cAAA,sKAAC;gBAAI,WAAU;0BACb,cAAA,sKAAC;oBAAI,WAAU;;sCACb,sKAAC;4BAAI,WAAU;;;;;;sCACf,sKAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;;;;;;;;;;;IAKvC;IAEA,MAAM,YAAY;QAChB;YAAE,OAAO;YAAoB,MAAM;QAAQ;QAC3C;YAAE,OAAO;YAAmB,MAAM;QAAQ;QAC1C;YAAE,OAAO;YAAgB,MAAM;QAAQ;QACvC;YAAE,OAAO;YAAkB,MAAM;QAAQ;KAC1C;IAED,qBACE,sKAAC,uIAAM;kBACL,cAAA,sKAAC;YAAI,WAAU;;8BAEb,sKAAC;oBAAI,WAAU;8BACb,cAAA,sKAAC,4IAAW;wBACV,QAAQ;4BAAC;4BAAW;4BAAW;yBAAU;wBACzC,YAAY;wBACZ,YAAY;wBACZ,WAAW;wBACX,SAAS;wBACT,mBAAmB;wBACnB,mBAAmB;wBACnB,YAAY;wBACZ,UAAU;wBACV,UAAU;wBACV,WAAW;wBACX,eAAe;wBACf,kBAAkB;wBAClB,iBAAiB;wBACjB,kBAAkB;wBAClB,OAAO;4BAAE,OAAO;4BAAQ,QAAQ;wBAAO;;;;;;;;;;;8BAI3C,sKAAC;oBAAI,WAAU;;sCAEb,sKAAC;;8CACC,sKAAC;oCAAG,WAAU;;wCAA+C;wCAC5C,CAAA,qBAAA,+BAAA,SAAU,QAAQ,KAAI;wCAAQ;;;;;;;8CAE/C,sKAAC;oCAAE,WAAU;8CAAqB;;;;;;;;;;;;sCAMpC,sKAAC;4BAAQ,WAAU;;8CACjB,sKAAC;oCAAI,WAAU;;sDACb,sKAAC;4CAAG,WAAU;sDAAsC;;;;;;sDACpD,sKAAC;4CAAE,WAAU;sDACV,UAAU,KAAK;;;;;;;;;;;;8CAGpB,sKAAC;oCAAI,WAAU;;sDACb,sKAAC;4CAAG,WAAU;sDAAsC;;;;;;sDACpD,sKAAC;4CAAE,WAAU;sDACV,UAAU,KAAK;;;;;;;;;;;;8CAGpB,sKAAC;oCAAI,WAAU;;sDACb,sKAAC;4CAAG,WAAU;sDAAsC;;;;;;sDACpD,sKAAC;4CAAE,WAAU;sDAAgC;;;;;;;;;;;;8CAE/C,sKAAC;oCAAI,WAAU;;sDACb,sKAAC;4CAAG,WAAU;sDAAsC;;;;;;sDACpD,sKAAC;4CAAE,WAAU;sDACV,CAAA,qBAAA,+BAAA,SAAU,SAAS,IAChB,IAAI,KAAK,SAAS,SAAS,EAAE,kBAAkB,KAC/C;;;;;;;;;;;;;;;;;;sCAMV,sKAAC;4BAAQ,WAAU;;8CACjB,sKAAC;oCAAI,WAAU;;sDACb,sKAAC;4CAAG,WAAU;sDAAsC;;;;;;sDACpD,sKAAC;4CAAG,WAAU;;8DACZ,sKAAC;oDAAI,WAAU;;sEACb,sKAAC;sEAAG;;;;;;sEACJ,sKAAC;4DAAG,WAAU;sEACX,CAAA,qBAAA,+BAAA,SAAU,QAAQ,KAAI;;;;;;;;;;;;8DAG3B,sKAAC;oDAAI,WAAU;;sEACb,sKAAC;sEAAG;;;;;;sEACJ,sKAAC;4DAAG,WAAU;sEACX,CAAA,qBAAA,+BAAA,SAAU,KAAK,KAAI;;;;;;;;;;;;8DAGxB,sKAAC;oDAAI,WAAU;;sEACb,sKAAC;sEAAG;;;;;;sEACJ,sKAAC;4DAAG,WAAU;sEAAmB;;;;;;;;;;;;;;;;;;;;;;;;8CAKvC,sKAAC;oCAAI,WAAU;;sDACb,sKAAC;4CAAG,WAAU;sDAAsC;;;;;;sDACpD,sKAAC;4CAAE,WAAU;sDACV,UAAU,KAAK,GAAG,IACf,AAAC,iCACC,OAD+B,UAAU,KAAK,EAAC,SAEhD,OADC,UAAU,KAAK,GAAG,IAAI,MAAM,IAC7B,OACD;;;;;;wCAGL,UAAU,KAAK,GAAG,mBACjB,sKAAC;4CAAE,WAAU;;gDAA6B;gDAC/B;gDACR,KAAK,KAAK,CACT,UAAU,KAAK,GACb,KAAK,GAAG,CACN,GACA,KAAK,KAAK,CACR,CAAC,KAAK,GAAG,KACP,IAAI,KACF,CAAA,qBAAA,+BAAA,SAAU,SAAS,KAAI,KAAK,GAAG,IAC/B,OAAO,EAAE,IACX,CAAC,OAAO,KAAK,KAAK,EAAE;gDAG3B;gDAAI;;;;;;;;;;;;;8CAMb,sKAAC;oCAAI,WAAU;;sDACb,sKAAC;4CAAG,WAAU;sDAAsC;;;;;;sDACpD,sKAAC;4CAAG,WAAU;;8DACZ,sKAAC;8DAAG;;;;;;8DACJ,sKAAC;8DAAG;;;;;;8DACJ,sKAAC;8DAAG;;;;;;;;;;;;;;;;;;;;;;;;wBAMT,YAAY,MAAM,GAAG,mBACpB,sKAAC;;8CACC,sKAAC;oCAAG,WAAU;8CAA2C;;;;;;8CAGzD,sKAAC;oCAAI,WAAU;8CACZ,YAAY,GAAG,CAAC,CAAC,MAAM;4CAWb;6DAVT,sKAAC;4CAEC,WAAU;sDAEV,cAAA,sKAAC;gDAAI,WAAU;;kEACb,sKAAC;;0EACC,sKAAC;gEAAG,WAAU;0EACX,KAAK,KAAK;;;;;;0EAEb,sKAAC;gEAAE,WAAU;;oEACV,EAAA,oBAAA,KAAK,WAAW,cAAhB,wCAAA,kBAAkB,KAAK,CAAC,GAAG,QAAO;oEAAkB;;;;;;;;;;;;;kEAGzD,sKAAC;wDAAK,WAAU;kEACb,IAAI,KAAK,KAAK,SAAS,EAAE,kBAAkB;;;;;;;;;;;;2CAb3C,KAAK,GAAG,IAAI;;;;;;;;;;;;;;;;;sCAuB3B,sKAAC;;8CACC,sKAAC;oCAAG,WAAU;8CAA2C;;;;;;8CAGzD,sKAAC;oCAAI,WAAU;8CACZ;wCACC;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;qCACD,CAAC,GAAG,CAAC,CAAC,wBACL,sKAAC;4CAEC,WAAU;;8DAEV,sKAAC;oDAAG,WAAU;8DAAqC;;;;;;8DACnD,sKAAC;oDAAE,WAAU;8DAA6B;;;;;;8DAC1C,sKAAC;oDACC,MAAK;oDACL,WAAU;;wDACX;wDACY;wDAAQ;;;;;;;;2CAThB;;;;;;;;;;;;;;;;sCAiBb,sKAAC;;8CACC,sKAAC;oCAAG,WAAU;8CAA2C;;;;;;8CAGzD,sKAAC;oCAAI,WAAU;8CACZ,UAAU,GAAG,CAAC,CAAC,qBACd,sKAAC;4CAEC,MAAM,KAAK,IAAI;4CACf,WAAU;sDAET,KAAK,KAAK;2CAJN,KAAK,KAAK;;;;;;;;;;;;;;;;sCAWvB,sKAAC;;8CACC,sKAAC;oCAAG,WAAU;8CAA2C;;;;;;8CAGzD,sKAAC;oCAAI,WAAU;;sDACb,sKAAC;4CAAI,WAAU;;8DACb,sKAAC;oDAAG,WAAU;8DAAoC;;;;;;8DAGlD,sKAAC;oDAAE,WAAU;8DAA6B;;;;;;8DAG1C,sKAAC;oDAAK,WAAU;8DAAwB;;;;;;;;;;;;sDAG1C,sKAAC;4CAAI,WAAU;;8DACb,sKAAC;oDAAG,WAAU;8DAAoC;;;;;;8DAGlD,sKAAC;oDAAE,WAAU;8DAA6B;;;;;;8DAG1C,sKAAC;oDAAK,WAAU;8DAAwB;;;;;;;;;;;;sDAG1C,sKAAC;4CAAI,WAAU;;8DACb,sKAAC;oDAAG,WAAU;8DAAoC;;;;;;8DAGlD,sKAAC;oDAAE,WAAU;8DAA6B;;;;;;8DAG1C,sKAAC;oDAAK,WAAU;8DAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQxD;GA5UwB;;QACuB,yIAAO;QACrC,mJAAS;;;KAFF","debugId":null}},
    {"offset": {"line": 3259, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/dashboard\";\n\n/// <reference types=\"next/client\" />\r\n\r\n// inserted by rust code\r\ndeclare const PAGE_PATH: string\r\n\r\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\r\n;(window.__NEXT_P = window.__NEXT_P || []).push([\r\n  PAGE_PATH,\r\n  () => {\r\n    return require('PAGE')\r\n  },\r\n])\r\n// @ts-expect-error module.hot exists\r\nif (module.hot) {\r\n  // @ts-expect-error module.hot exists\r\n  module.hot.dispose(function () {\r\n    window.__NEXT_P.push([PAGE_PATH])\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}