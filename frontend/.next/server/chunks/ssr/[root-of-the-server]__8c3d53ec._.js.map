{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///D:/FYP/Fyp%20cursor/frontend/context/AuthContext.js"],"sourcesContent":["// context/AuthContext.js\r\nimport { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst AuthContext = createContext({\r\n  token: null,\r\n  isLoggedIn: false, // Start as false initially\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(null);\r\n  // Add a loading state to prevent premature checks\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // On app load, check if token exists in localStorage (single source of truth)\r\n    const storedToken = localStorage.getItem('token');\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (newToken) => {\r\n    setToken(newToken);\r\n    localStorage.setItem('token', newToken);\r\n    router.push('/dashboard');\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    router.push('/');\r\n  };\r\n\r\n  // Derive isLoggedIn directly from the token state\r\n  const isLoggedIn = !!token;\r\n\r\n  // Provide the loading state as well, if needed by components\r\n  const value = { token, isLoggedIn, login, logout, loading };\r\n\r\n  // Don't render children until authentication status is determined\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to easily use the auth context\r\nexport const useAuth = () => useContext(AuthContext);"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;;;AACzB;AACA;;;;AAEA,MAAM,4BAAc,IAAA,oHAAa,EAAC;IAChC,OAAO;IACP,YAAY;IACZ,OAAO,KAAO;IACd,QAAQ,KAAO;AACjB;AAEO,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,+GAAQ,EAAC;IACnC,kDAAkD;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,+GAAQ,EAAC;IACvC,MAAM,SAAS,IAAA,gJAAS;IAExB,IAAA,gHAAS,EAAC;QACR,8EAA8E;QAC9E,MAAM,cAAc,aAAa,OAAO,CAAC;QACzC,IAAI,aAAa;YACf,SAAS;QACX;QACA,WAAW;IACb,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAC;QACb,SAAS;QACT,aAAa,OAAO,CAAC,SAAS;QAC9B,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,SAAS;QACb,SAAS;QACT,aAAa,UAAU,CAAC;QACxB,OAAO,IAAI,CAAC;IACd;IAEA,kDAAkD;IAClD,MAAM,aAAa,CAAC,CAAC;IAErB,6DAA6D;IAC7D,MAAM,QAAQ;QAAE;QAAO;QAAY;QAAO;QAAQ;IAAQ;IAE1D,kEAAkE;IAClE,qBACE,qKAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B,CAAC,WAAW;;;;;;AAGnB;AAGO,MAAM,UAAU,IAAM,IAAA,iHAAU,EAAC","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///D:/FYP/Fyp%20cursor/frontend/pages/_app.js"],"sourcesContent":["import { AuthProvider } from '../context/AuthContext';\r\nimport '../src/styles/globals.css'; // Your Tailwind styles\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  return (\r\n    <AuthProvider>\r\n      <Component {...pageProps} />\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default MyApp;"],"names":[],"mappings":";;;;;AAAA;;;;AAGA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACrC,qBACE,qKAAC,2IAAY;kBACX,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B;uCAEe","debugId":null}}]
}